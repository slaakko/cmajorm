// =================================
// Copyright (c) 2022 Seppo Laakko
// Distributed under the MIT license
// =================================

#include <cmajor/cmmsg/MsgApi.hpp>

class api(MSG_API) Location
{
    string func;
    string file;
    int line;
    int scol;
    int ecol;
    int level;
}

class api(MSG_API) Type
{
    string name;
    string id;
}

class api(MSG_API) Result
{
    Type staticType;
    Type dynamicType;
    bool initialized;
    string value;
}

class api(MSG_API) ChildResult
{
    string expr;
    string name;
    string type;
    string dynType;
    string value;
    int count;
}

class api(MSG_API) TargetState
{
    string stopReason;
    string exitCode;
    string breakpointId;
    string signalName;
    string signalMeaning;
}

class api(MSG_API) SourceLoc
{
    string path;
    int line;
}

class api(MSG_API) BreakpointInfo
{
    bool success;
    string breakpointId;
    int numInsts;
    Location location;
    string error;
}

class api(MSG_API) StartDebugRequest
{
    SourceLoc[] breakpointLocations;
}

class api(MSG_API) StartDebugReply
{
    bool success;
    Location location;
    TargetState state;
    BreakpointInfo[] breakpointInfos;
    string error;
}

class api(MSG_API) StopDebugRequest
{
}

class api(MSG_API) StopDebugReply
{
}

class api(MSG_API) GenericDebugErrorReply
{
    string errorMessage;
}

class api(MSG_API) ContinueRequest
{
}

class api(MSG_API) ContinueReply
{
    bool success;
    Location location;
    TargetState state;
    string error;
}

class api(MSG_API) NextRequest
{
}

class api(MSG_API) NextReply
{
    bool success;
    Location location;
    TargetState state;
    string error;
}

class api(MSG_API) StepRequest
{
}

class api(MSG_API) StepReply
{
    bool success;
    Location location;
    TargetState state;
    string error;
}

class api(MSG_API) FinishRequest
{
}

class api(MSG_API) FinishReply
{
    bool success;
    Location location;
    TargetState state;
    string error;
}

class api(MSG_API) UntilRequest
{
    SourceLoc sourceLoc;
}

class api(MSG_API) UntilReply
{
    bool success;
    Location location;
    TargetState state;
    string error;
}

class api(MSG_API) BreakRequest
{
    SourceLoc breakpointLocation;
}

class api(MSG_API) BreakReply
{
    BreakpointInfo breakpointInfo;
}

class api(MSG_API) DeleteRequest
{
    string breakpointId;
}

class api(MSG_API) DeleteReply
{
    bool success;
    string error;
}

class api(MSG_API) DepthRequest
{
}

class api(MSG_API) DepthReply
{
    bool success;
    int depth;
    string error;
}

class api(MSG_API) FramesRequest
{
    int lowFrame;
    int highFrame;
}

class api(MSG_API) FramesReply
{
    bool success;
    Location[] frames;
    string error;
}

class api(MSG_API) EvaluateRequest
{
    string expression;
}

class api(MSG_API) EvaluateReply
{
    bool success;
    Result result;
    string error;
}

class api(MSG_API) CountRequest
{
    string expression;
}

class api(MSG_API) CountReply
{
    bool success;
    int count;
    string error;
}

class api(MSG_API) EvaluateChildRequest
{
    string expression;
    int start;
    int count;
}

class api(MSG_API) EvaluateChildReply
{
    bool success;
    ChildResult[] results;
    string error;
}

class api(MSG_API) TargetRunningRequest
{
}

class api(MSG_API) TargetRunningReply
{
}

class api(MSG_API) TargetInputRequest
{
}

class api(MSG_API) TargetInputReply
{
    string line;
    bool eof;
}

class api(MSG_API) TargetOutputRequest
{
    int handle;
    string output;
}

class api(MSG_API) TargetOutputReply
{
}

class api(MSG_API) LogDebugMessageRequest
{
    string logMessage;
}

class api(MSG_API) LogDebugMessageReply
{
}

class api(MSG_API) KillRequest
{
}

class api(MSG_API) KillReply
{
}
