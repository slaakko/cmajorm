// =================================
// Copyright (c) 2021 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Collections;
using System.Windows.API;
using System.Concepts;

namespace System.Windows
{
    public class EmptyEventArgs
    {
    }
    
    public class Event<Handler, Args = EmptyEventArgs>
    {
        public nothrow void AddHandler(Handler handler)
        {
            if (Find(handlers.CBegin(), handlers.CEnd(), handler) == handlers.CEnd())
            {
                handlers.Add(handler);
            }
        }
        public nothrow void RemoveHandler(Handler handler)
        {
            handlers.Remove(handler);
        }
        public nothrow const List<Handler>& Handlers() const
        {
            return handlers;
        }
        public void Fire() where Args is EmptyEventArgs
        {
            for (Handler handler : handlers)
            {
                handler();
            }
        }
        public void Fire(Args& args)
        {
            for (Handler handler : handlers)
            {
                handler(args);
            }
        }
        private List<Handler> handlers;
    }
}
