// =================================
// Copyright (c) 2020 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Collections;

namespace System.Windows
{
    public enum ButtonStyle : long
    {
        BS_PUSHBUTTON = 0,
        BS_DEFPUSHBUTTON = 1
    }
    
    public class ButtonBase : Control
    {
        public ButtonBase(const char* windowClassName, WindowClassStyle windowClassStyle, WindowStyle style, ExtendedWindowStyle exStyle, 
            const Color& backgroundColor, const string& text, const Point& location, const Size& size, Dock dock, Anchors anchors) : 
            base(windowClassName, windowClassStyle, style, exStyle, backgroundColor, text, location, size, dock, anchors)
        {
        }
        internal void OnClickInternal()
        {
            OnClick();
        }
    }
    
    public class Button : ButtonBase
    {
        public Button(ButtonStyle buttonStyle, const string& text, const Point& location, const Size& size, Dock dock, Anchors anchors) :
            base("BUTTON", DefaultWindowClassStyle(), cast<WindowStyle>(DefaultChildWindowStyle() | WindowStyle.WS_TABSTOP | buttonStyle), DefaultExtendedWindowStyle(), 
            GetSystemColor(SystemColor.COLOR_BTNFACE), text, location, size, dock, anchors)
        {
        }
        public Button(const string& text, const Point& location, const Size& size, Dock dock, Anchors anchors) :
            this(ButtonStyle.BS_PUSHBUTTON, text, location, size, dock, anchors)
        {
        }
        public Button(ButtonStyle buttonStyle, const string& text, const Point& location, const Size& size) :
            this(buttonStyle, text, location, size, Dock.none, cast<Anchors>(Anchors.top | Anchors.left))
        {
        }
        public Button(const string& text, const Point& location, const Size& size) : 
            this(ButtonStyle.BS_PUSHBUTTON, text, location, size)
        {
        }
        public override void PrintWindowTree(int level)
        {
            LogView* log = Application.GetLogView();
            if (log != null)
            {
                log->WriteLine(string(' ', level) + "Button." + Text() + ".handle=" + ToHexString(cast<ulong>(Handle())) + " " + ParentText() + "[" + Rect(Point(), GetSize()).ToString() + "]");
            }
        }
    }
}
