// =================================
// Copyright (c) 2020 Seppo Laakko
// Distributed under the MIT license
// =================================

public extern cdecl void WinSetInstance();
public extern cdecl nothrow ulong WinGetLastError();
public extern cdecl nothrow void WinFormatMessage(ulong errorCode, wchar* buffer);
public extern cdecl nothrow void* WinCreateEvent();
public extern cdecl nothrow bool WinSetEvent(void* eventHandle);
public extern cdecl nothrow bool WinResetEvent(void* eventHandle);
public extern cdecl nothrow bool WinWaitEvent(void* eventHandle);
public extern cdecl nothrow bool WinCloseHandle(void* handle);
public extern cdecl nothrow int WinWaitForMultipleObjects(uint count, void** handles);
public extern cdecl nothrow void* WinFindFirstChangeNotification(const char* directoryPath);
public extern cdecl nothrow bool WinFindNextChangeNotification(void* handle);
public extern cdecl nothrow bool WinFindCloseChangeNotification(void* handle);
public extern cdecl nothrow bool WinShellExecute(const char* filePath, long& errorCode);
public extern cdecl nothrow int WinInit(void* messageProcessorFunctionAddress);
public extern cdecl nothrow int WinRun();
public extern cdecl nothrow void WinDone();
public extern cdecl nothrow ushort WinRegisterWindowClass(const char* windowClassName, uint style, int backgroundColor);
public extern cdecl nothrow void* WinCreateWindowByClassAtom(ushort windowClass, const char* windowName, long style, long exStyle, int x, int y, int w, int h, void* parentHandle);
public extern cdecl nothrow void* WinCreateWindowByClassName(const char* windowClass, const char* windowName, long style, long exStyle, int x, int y, int w, int h, void* parentHandle);
public extern cdecl nothrow int WinShowMessageBox(const char* text, const char* caption);
public extern cdecl nothrow int WinShowMessageBoxWithType(const char* text, const char* caption, void* ownerWindowHandle, uint type);
public extern cdecl nothrow void WinPostQuitMessage(int exitCode);
public extern cdecl nothrow bool WinShowWindow(void* windowHandle, int commandShow);
public extern cdecl nothrow bool WinUpdateWindow(void* windowHandle);
public extern cdecl nothrow bool WinMoveWindow(void* windowHandle, int x, int y, int w, int h, bool repaint);
public extern cdecl nothrow bool WinGetClientRect(void* windowHandle, void* rect);
public extern cdecl nothrow bool WinGetWindowRect(void* windowHandle, void* rect);
public extern cdecl nothrow bool WinClientToScreen(void* windowHandle, void* point);
public extern cdecl nothrow bool WinScreenToClient(void* windowHandle, void* point);
public extern cdecl nothrow bool WinPtInRect(void* rect, void* point);
public extern cdecl nothrow bool WinSetWindowText(void* windowHandle, const char* text);
public extern cdecl nothrow void* WinSetParent(void* childWindowHandle, void* parentWindowHandle);
public extern cdecl nothrow void* WinBeginPaint(void* windowHandle, void*& paintStruct);
public extern cdecl nothrow void WinEndPaint(void* windowHandle, void* paintStruct);
public extern cdecl nothrow void WinGetClipRect(void* paintStruct, int& x, int& y, int& w, int& h);
public extern cdecl nothrow bool WinInvalidateRect(void* windowHandle, void* rect, bool eraseBackground);
public extern cdecl nothrow void* WinCreateGraphics(void* hdc);
public extern cdecl nothrow void WinDeleteGraphics(void* nativeGraphics);
public extern cdecl nothrow int WinGraphicsGetLastStatus(void* graphics);
public extern cdecl nothrow void* WinGraphicsGetHDC(void* graphics);
public extern cdecl nothrow void* WinGraphicsCreatePen(byte alpha, byte red, byte green, byte blue, float width);
public extern cdecl nothrow void* WinGraphicsClonePen(void* pen);
public extern cdecl nothrow void WinGraphicsDeletePen(void* pen);
public extern cdecl nothrow int WinGraphicsPenGetLastStatus(void* pen);
public extern cdecl nothrow void* WinGraphicsCreateSolidBrush(byte alpha, byte red, byte green, byte blue);
public extern cdecl nothrow void* WinGraphicsCloneSolidBrush(void* solidBrush);
public extern cdecl nothrow void WinGraphicsDeleteSolidBrush(void* solidBrush);
public extern cdecl nothrow int WinGraphicsBrushGetLastStatus(void* brush);
public extern cdecl nothrow void* WinGraphicsCreateFontFamily(const char* familyName);
public extern cdecl nothrow void* WinGraphicsCloneFontFamily(void* fontFamily);
public extern cdecl nothrow void WinGraphicsDeleteFontFamily(void* fontFamily);
public extern cdecl nothrow const void* WinGraphicsGetGenericMonospaceFontFamily();
public extern cdecl nothrow const void* WinGraphicsGetGenericSansSerifFontFamily();
public extern cdecl nothrow const void* WinGraphicsGetGenericSerifFontFamily();
public extern cdecl nothrow int WinGraphicsFontFamilyGetLastStatus(void* fontFamily);
public extern cdecl nothrow void* WinGraphicsCreateFont(const void* fontFamily, float emSize, int style, int unit);
public extern cdecl nothrow void* WinGraphicsCloneFont(void* font);
public extern cdecl nothrow void WinGraphicsDeleteFont(void* font);
public extern cdecl nothrow float WinGraphicsGetFontHeight(void* font, const void* graphics);
public extern cdecl nothrow int WinGraphicsFontGetLastStatus(void* font);
public extern cdecl nothrow int WinGraphicsDrawLine(void* graphics, void* pen, int startX, int startY, int endX, int endY);
public extern cdecl nothrow int WinGraphicsDrawString(void* graphics, const char* str, void* font, float x, float y, void* brush);
public extern cdecl nothrow int WinGraphicsClear(void* graphics, byte alpha, byte red, byte green, byte blue);
