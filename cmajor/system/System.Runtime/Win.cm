// =================================
// Copyright (c) 2020 Seppo Laakko
// Distributed under the MIT license
// =================================

public extern cdecl void WinSetInstance();
public extern cdecl nothrow ulong WinGetLastError();
public extern cdecl nothrow void WinFormatMessage(ulong errorCode, wchar* buffer);
public extern cdecl nothrow void* WinCreateEvent();
public extern cdecl nothrow bool WinSetEvent(void* eventHandle);
public extern cdecl nothrow bool WinResetEvent(void* eventHandle);
public extern cdecl nothrow bool WinWaitEvent(void* eventHandle);
public extern cdecl nothrow bool WinCloseHandle(void* handle);
public extern cdecl nothrow int WinWaitForMultipleObjects(uint count, void** handles);
public extern cdecl nothrow void* WinFindFirstChangeNotification(const char* directoryPath);
public extern cdecl nothrow bool WinFindNextChangeNotification(void* handle);
public extern cdecl nothrow bool WinFindCloseChangeNotification(void* handle);
public extern cdecl nothrow bool WinShellExecute(const char* filePath, long& errorCode);
public extern cdecl nothrow int WinInit(void* messageProcessorFunctionAddress);
public extern cdecl nothrow int WinRun();
public extern cdecl nothrow void WinDone();
public extern cdecl nothrow ushort WinRegisterWindowClass(const char* windowClassName, uint style, int backgroundColor);
public extern cdecl nothrow void* WinCreateWindowByClassAtom(ushort windowClass, const char* windowName, long style, long exStyle, int x, int y, int w, int h, void* parentHandle);
public extern cdecl nothrow void* WinCreateWindowByClassName(const char* windowClass, const char* windowName, long style, long exStyle, int x, int y, int w, int h, void* parentHandle);
public extern cdecl nothrow int WinShowMessageBox(const char* text, const char* caption);
public extern cdecl nothrow int WinShowMessageBoxWithType(const char* text, const char* caption, void* ownerWindowHandle, uint type);
public extern cdecl nothrow bool WinMessageBeep(uint beepType);
public extern cdecl nothrow void WinPostQuitMessage(int exitCode);
public extern cdecl nothrow bool WinPostMessage(void* windowHandle, uint msg, uint wparam, long lparam);
public extern cdecl nothrow long WinSendMessage(void* windowHandle, uint msg, uint wparam, long lparam);
public extern cdecl nothrow bool WinShowWindow(void* windowHandle, int commandShow);
public extern cdecl nothrow bool WinUpdateWindow(void* windowHandle);
public extern cdecl nothrow bool WinMoveWindow(void* windowHandle, int x, int y, int w, int h, bool repaint);
public extern cdecl nothrow bool WinGetClientRect(void* windowHandle, void* rect);
public extern cdecl nothrow bool WinGetWindowRect(void* windowHandle, void* rect);
public extern cdecl nothrow bool WinClientToScreen(void* windowHandle, void* point);
public extern cdecl nothrow bool WinScreenToClient(void* windowHandle, void* point);
public extern cdecl nothrow bool WinPtInRect(void* rect, void* point);
public extern cdecl nothrow bool WinSetWindowText(void* windowHandle, const char* text);
public extern cdecl nothrow void* WinGetDC(void* windowHandle);
public extern cdecl nothrow bool WinTrackMouseEvent(void* windowHandle, uint flags, uint hoverTimeMs);
public extern cdecl nothrow void* WinSetParent(void* childWindowHandle, void* parentWindowHandle);
public extern cdecl nothrow void* WinBeginPaint(void* windowHandle, void*& paintStruct);
public extern cdecl nothrow void WinEndPaint(void* windowHandle, void* paintStruct);
public extern cdecl nothrow void WinGetClipRect(void* paintStruct, int& x, int& y, int& w, int& h);
public extern cdecl nothrow bool WinInvalidateRect(void* windowHandle, void* rect, bool eraseBackground);
public extern cdecl nothrow void* WinCreateGraphics(void* hdc);
public extern cdecl nothrow void WinDeleteGraphics(void* nativeGraphics);
public extern cdecl nothrow void* WinCreateGraphicsFromWindowHandle(void* windowHandle);
public extern cdecl nothrow void* WinCreateGraphicsFromImage(void* image);
public extern cdecl nothrow int WinGraphicsGetLastStatus(void* graphics);
public extern cdecl nothrow void* WinGraphicsGetHDC(void* graphics);
public extern cdecl nothrow void* WinGraphicsCreatePen(byte alpha, byte red, byte green, byte blue, float width);
public extern cdecl nothrow void* WinGraphicsClonePen(void* pen);
public extern cdecl nothrow void WinGraphicsDeletePen(void* pen);
public extern cdecl nothrow int WinGraphicsPenGetLastStatus(void* pen);
public extern cdecl nothrow void* WinGraphicsCreateSolidBrush(byte alpha, byte red, byte green, byte blue);
public extern cdecl nothrow void* WinGraphicsCloneSolidBrush(void* solidBrush);
public extern cdecl nothrow void WinGraphicsDeleteSolidBrush(void* solidBrush);
public extern cdecl nothrow int WinGraphicsBrushGetLastStatus(void* brush);
public extern cdecl nothrow void* WinGraphicsCreateFontFamily(const char* familyName);
public extern cdecl nothrow void* WinGraphicsCloneFontFamily(void* fontFamily);
public extern cdecl nothrow void WinGraphicsDeleteFontFamily(void* fontFamily);
public extern cdecl nothrow const void* WinGraphicsGetGenericMonospaceFontFamily();
public extern cdecl nothrow const void* WinGraphicsGetGenericSansSerifFontFamily();
public extern cdecl nothrow const void* WinGraphicsGetGenericSerifFontFamily();
public extern cdecl nothrow int WinGraphicsFontFamilyGetLastStatus(void* fontFamily);
public extern cdecl nothrow void* WinGraphicsCreateFont(const void* fontFamily, float emSize, int style, int unit);
public extern cdecl nothrow void* WinGraphicsCloneFont(void* font);
public extern cdecl nothrow void WinGraphicsDeleteFont(void* font);
public extern cdecl nothrow float WinGraphicsGetFontHeight(void* font, const void* graphics);
public extern cdecl nothrow int WinGraphicsFontGetLastStatus(void* font);
public extern cdecl nothrow void* WinGraphicsCreateDefaultStringFormat();
public extern cdecl nothrow void* WinGraphicsCreateStringFormat(int formatFlags, ushort languageId);
public extern cdecl nothrow void* WinGraphicsCloneStringFormat(void* stringFormat);
public extern cdecl nothrow void WinGraphicsDeleteStringFormat(void* stringFormat);
public extern cdecl nothrow int WinGraphicsStringFormatGetLastStatus(void* stringFormat);
public extern cdecl nothrow int WinGraphicsStringFormatSetAlignment(void* stringFormat, int alignment);
public extern cdecl nothrow int WinGraphicsStringFormatSetLineAlignment(void* stringFormat, int alignment);
public extern cdecl nothrow int WinGraphicsStringFormatSetHotKeyPrefix(void* stringFormat, int hotKeyPrefix);
public extern cdecl nothrow int WinGraphicsDrawLine(void* graphics, void* pen, int startX, int startY, int endX, int endY);
public extern cdecl nothrow int WinGraphicsDrawLines(void* graphics, void* pen, int count, void* points);
public extern cdecl nothrow int WinGraphicsDrawString(void* graphics, const char* str, void* font, float x, float y, void* brush);
public extern cdecl nothrow int WinGraphicsDrawStringFormatPoint(void* graphics, const char* str, void* font, float x, float y, void* format, void* brush);
public extern cdecl nothrow int WinGraphicsDrawStringFormatRect(void* graphics, const char* str, void* font, float x, float y, float w, float h, void* format, void* brush);
public extern cdecl nothrow int WinGraphicsMeasureStringFormatSize(void* graphics, const char* str, void* font, float w, float h, void* format,
    float& outSizeW, float& outSizeH, int* codePointsFitted, int* linesFilled);
public extern cdecl nothrow int WinGraphicsMeasureStringFormatRect(void* graphics, const char* str, void* font, float x, float y, float w, float h, void* format,
    float& outX, float& outY, float& outW, float& outH, int* codePointsFitted, int* linesFilled);
public extern cdecl nothrow int WinGraphicsMeasureStringFormatPoint(void* graphics, const char* str, void* font, float x, float y, void* format,
    float& outX, float& outY, float& outW, float& outH);
public extern cdecl nothrow int WinGraphicsClear(void* graphics, byte alpha, byte red, byte green, byte blue);
public extern cdecl nothrow int WinGraphicsDrawRectangle(void* graphics, void* pen, int x, int y, int w, int h);
public extern cdecl nothrow int WinGraphicsDrawRectangleF(void* graphics, void* pen, float x, float y, float w, float h);
public extern cdecl nothrow int WinGraphicsFillRectangle(void* graphics, void* brush, int x, int y, int w, int h);
public extern cdecl nothrow int WinGraphicsFillRectangleF(void* graphics, void* brush, float x, float y, float w, float h);
public extern cdecl nothrow int WinGraphicsFillPolygon(void* graphics, void* brush, int count, void* points);
public extern cdecl nothrow void WinGetSysColor(int index, byte& red, byte& green, byte& blue);
public extern cdecl nothrow void* WinGraphicsCreateRegion();
public extern cdecl nothrow void* WinGraphicsCloneRegion(void* region);
public extern cdecl nothrow void WinGraphicsDeleteRegion(void* region);
public extern cdecl nothrow int WinGraphicsRegionGetLastStatus(void* region);
public extern cdecl nothrow int WinGraphicsGetClip(void* graphics, void* region);
public extern cdecl nothrow int WinGraphicsSetClipRect(void* graphics, int x, int y, int w, int h, int combineMode);
public extern cdecl nothrow int WinGraphicsSetClipRegion(void* graphics, void* region);
public extern cdecl nothrow void* WinGraphicsCreateImage(const char* fileName, bool useEmbeddedColorManagement);
public extern cdecl nothrow int WinGraphicsImageGetLastStatus(void* image);
public extern cdecl nothrow void* WinGraphicsCloneImage(void* image);
public extern cdecl nothrow void WinGraphicsDeleteImage(void* image);
public extern cdecl nothrow void* WinGraphicsCreateBitmap(const char* fileName, bool useEmbeddedColorManagement);
public extern cdecl nothrow void* WinGraphicsCreateBitmapWidthHeight(int w, int h, void* graphics);
public extern cdecl nothrow void* WinGraphicsCreateBitmapWinBitmap(void* winBitmap, void* palette);
public extern cdecl nothrow void* WinGraphicsCreateBitmapIcon(void* icon);
public extern cdecl nothrow void* WinGraphicsCreateBitmapResource(const char* resourceName);
public extern cdecl nothrow uint WinGraphicsSave(void* graphics);
public extern cdecl nothrow int WinGraphicsRestore(void* graphics, uint graphicsState);
public extern cdecl nothrow int WinGraphicsDrawImagePoint(void* graphics, void* image,  float x, float y);
public extern cdecl nothrow int WinGraphicsDrawImageRect(void* graphics, void* image,  float x, float y, float w, float h);
public extern cdecl nothrow int WinGraphicsGetTransform(void* graphics, void* matrix);
public extern cdecl nothrow int WinGraphicsSetTransform(void* graphics, void* matrix);
public extern cdecl nothrow int WinGraphicsMultiplyTransform(void* graphics, void* matrix, int order);
public extern cdecl nothrow int WinGraphicsResetTransform(void* graphics);
public extern cdecl nothrow int WinGraphicsRotateTransform(void* graphics, float angle, int order);
public extern cdecl nothrow int WinGraphicsScaleTransform(void* graphics, float scaleX, float scaleY, int order);
public extern cdecl nothrow int WinGraphicsTranslateTransform(void* graphics, float offsetX, float offsetY, int order);
public extern cdecl nothrow void* WinGraphicsCreateMatrix();
public extern cdecl nothrow void* WinGraphicsCreateMatrixFromElements(float m11, float m12, float m21, float m22, float dx, float dy);
public extern cdecl nothrow void* WinGraphicsCreateMatrixRectPoint(int rectX, int rectY, int rectW, int rectH, int ptX, int ptY);
public extern cdecl nothrow void* WinGraphicsCreateMatrixRectFPointF(float rectX, float rectY, float rectW, float rectH, float ptX, float ptY);
public extern cdecl nothrow int WinGraphicsMatrixGetLastStatus(void* matrix);
public extern cdecl nothrow void* WinGraphicsCloneMatrix(void* matrix);
public extern cdecl nothrow void WinGraphicsDeleteMatrix(void* matrix);
public extern cdecl nothrow int WinGraphicsMultiplyMatrix(void* matrix, void* factorMatrix, int order);
public extern cdecl nothrow int WinGraphicsResetMatrix(void* matrix);
public extern cdecl nothrow int WinGraphicsInvertMatrix(void* matrix);
public extern cdecl nothrow float WinGraphicsMatrixOffsetX(void* matrix);
public extern cdecl nothrow float WinGraphicsMatrixOffsetY(void* matrix);
public extern cdecl nothrow int WinGraphicsMatrixRotate(void* matrix, float angle, int order);
public extern cdecl nothrow int WinGraphicsMatrixRotateAt(void* matrix, float angle, float centerX, float centerY, int order);
public extern cdecl nothrow int WinGraphicsMatrixScale(void* matrix, float scaleX, float scaleY, int order);
public extern cdecl nothrow int WinGraphicsMatrixShear(void* matrix, float shearX, float shearY, int order);
public extern cdecl nothrow int WinGraphicsMatrixTranslate(void* matrix, float offsetX, float offsetY, int order);
public extern cdecl nothrow int WinGraphicsMatrixTransformPoints(void* matrix, void* points, int numPoints);
public extern cdecl nothrow int WinGraphicsMatrixTransformPointsF(void* matrix, void* points, int numPoints);
public extern cdecl nothrow int WinGraphicsMatrixSetElements(void* matrix, float m11, float m12, float m21, float m22, float dx, float dy);
public extern cdecl nothrow int WinGraphicsGetPageUnit(void* graphics);
public extern cdecl nothrow int WinGraphicsSetPageUnit(void* graphics, int unit);
public extern cdecl nothrow float WinGraphicsGetPageScale(void* graphics);
public extern cdecl nothrow int WinGraphicsSetPageScale(void* graphics, float scale);
public extern cdecl nothrow float WinGraphicsGetDpiX(void* graphics);
public extern cdecl nothrow float WinGraphicsGetDpiY(void* graphics);
public extern cdecl nothrow int WinGraphicsGetSmoothingMode(void* graphics);
public extern cdecl nothrow int WinGraphicsSetSmoothingMode(void* graphics, int smoothingMode);
public extern cdecl nothrow void WinGetMessagePos(int& x, int& y);
public extern cdecl nothrow bool WinSetBkColor(void* hdc, byte red, byte green, byte blue);
public extern cdecl nothrow void* WinGetFocus();
public extern cdecl nothrow void* WinSetFocus(void* windowHandle);
public extern cdecl nothrow void* WinGetTopWindow(void* windowHandle);
public extern cdecl nothrow bool WinSetWindowPos(void* windowHandle, void* insertAfterWindowHandle, int x, int y, int cx, int cy, uint flags);
public extern cdecl nothrow bool WinBringWindowToTop(void* windowHandle);
public extern cdecl nothrow bool WinGetOpenFileName(void* windowHandle, const wchar* filter, const wchar* initialDirectory, wchar* fileNameBuffer, uint fileNameBufferSize, uint flags,
    const wchar* defaultExtension);
public extern cdecl nothrow uint WinCommDlgExtendedError();
public extern cdecl nothrow void* WinLoadImage(const char* name, uint type, int cx, int cy);
public extern cdecl nothrow void* WinLoadStandardCursor(int cursorId);
public extern cdecl nothrow void* WinLoadCursor(const char* cursorName);
public extern cdecl nothrow void* WinGetCursor();
public extern cdecl nothrow void* WinSetCursor(void* cursorHandle);
public extern cdecl nothrow bool WinDestroyCursor(void* cursorHandle);
public extern cdecl nothrow void* WinLoadStandardIcon(int iconId);
public extern cdecl nothrow void* WinLoadIcon(const char* iconName);
public extern cdecl nothrow bool WinDestroyIcon(void* iconHandle);
public extern cdecl nothrow void* WinLoadStandardBitmap(int bitmapId);
public extern cdecl nothrow void* WinLoadBitmap(const char* bitmapName);
public extern cdecl nothrow bool WinDestroyBitmap(void* bitmapHandle);
public extern cdecl nothrow bool WinDeleteObject(void* handle);
public extern cdecl nothrow int WinGetSystemMetrics(int index);
public extern cdecl nothrow void* WinSetCapture(void* windowHandle);
public extern cdecl nothrow bool WinReleaseCapture();
public extern cdecl nothrow long WinGetWindowLong(void* windowHandle, int index);
public extern cdecl nothrow bool WinSetWindowLong(void* windowHandle, int index, long newValue);
public extern cdecl nothrow bool WinScrollWindow(void* windowHandle, int xAmount, int yAmount,
    int clientLocX, int clientLocY, int clientSizeW, int clientSizeH, int clipLocX, int clipLocY, int clipSizeW, int clipSizeH);
public extern cdecl nothrow bool WinGetScrollInfo(void* windowHandle, int nBar, uint& nPage, int& nPos, int& nMin, int& nMax, int& nTrackPos);
public extern cdecl nothrow int WinSetScrollInfo(void* windowHandle, int nBar, uint fMask, bool redraw, uint nPage, int nPos, int nMin, int nMax);
public extern cdecl nothrow bool WinShowScrollBar(void* windowHandle, int nBar, bool show);
