// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;

namespace System.Dom
{
    public class DomDocumentFragment : DomParentNode
    {
        public nothrow DomDocumentFragment() : base(u"document_fragment")
        {
        }
        suppress DomDocumentFragment(const DomDocumentFragment&);
        suppress void operator=(const DomDocumentFragment&);
        suppress DomDocumentFragment(DomDocumentFragment&&);
        suppress void operator=(DomDocumentFragment&&);
        public override UniquePtr<DomNode> CloneNode(bool deep) const
        {
            UniquePtr<DomNode> clonedDocumentFragment(new DomDocumentFragment());
            if (deep)
            {
                DomParentNode* parentNode = cast<DomParentNode*>(clonedDocumentFragment.Get());
                CloneChildrenTo(parentNode);
            }
            return clonedDocumentFragment;
        }
    }
}
