using System;
using System.Collections;
using System.IO;

// this file has been semiautomatically generated from 'D:/work/soulng-project/sngcm/ast/AstWriter.hpp' using cpp2cm version 1.0.0

// this file has been semiautomatically generated from 'D:/work/soulng-project/sngcm/ast/AstWriter.cpp' using cpp2cm version 1.0.0

namespace System.Cmajor.Ast
{
    public class AstWriter
    {
        public AstWriter(const string& fileName_) :
            binaryWriter(File.CreateBinary(fileName_))
        {
        }
        public BinaryWriter& GetBinaryWriter()
        {
            return binaryWriter;
        }
        public void Write(Node* node)
        {
            binaryWriter.Write(cast<byte>(node->GetNodeType()));
            Write(node->GetSpan());
            node->Write(*this);
        }
        public void Write(Specifiers specifiers)
        {
            binaryWriter.Write(cast<uint>(cast<int>(specifiers)));
        }
        public void Write(const System.Lex.Span& span)
        {
            if (!span.Valid())
            {
                binaryWriter.Write(false);
            }
            else
            {
                binaryWriter.Write(true);
                binaryWriter.WriteULEB128UInt(cast<uint>(span.fileIndex));
                binaryWriter.WriteULEB128UInt(cast<uint>(span.line));
                binaryWriter.WriteULEB128UInt(cast<uint>(span.start));
                binaryWriter.WriteULEB128UInt(cast<uint>(span.end));
            }
        }
        private BinaryWriter binaryWriter;
    }
} // namespace System.Cmajor.Ast
