using System;

namespace cppsymbols
{
    public class AliasSymbol : Symbol
    {
        public nothrow AliasSymbol(const Span& span_, const ustring& name_, Symbol* target_) : base(span_, name_), target(target_)
        {
        }
        public override void Accept(SymbolVisitor& visitor)
        {
            visitor.Visit(*this);
        }
        public Symbol* target;
    }
    
    public class NamespaceImportSymbol : Symbol
    {
        public nothrow NamespaceImportSymbol(const Span& span_, NamespaceSymbol* ns_) : base(span_, ustring()), ns(ns_)
        {
        }
        public override void Accept(SymbolVisitor& visitor)
        {
            visitor.Visit(*this);
        }
        public NamespaceSymbol* ns;
    }
    
    public class TypeAliasSymbol : Symbol
    {
        public nothrow TypeAliasSymbol(const Span& span_, const ustring& name_, TypeSymbol* type_) : base(span_, name_), type(type_)
        {
        }
        public override void Accept(SymbolVisitor& visitor)
        {
            visitor.Visit(*this);
        }
        public TypeSymbol* type;
    }
    
    public class TypedefSymbol : Symbol
    {
        public nothrow TypedefSymbol(const Span& span_, const ustring& name_, TypeSymbol* type_) : base(span_, name_), type(type_)
        {
        }
        public override void Accept(SymbolVisitor& visitor)
        {
            visitor.Visit(*this);
        }
        public TypeSymbol* type;
    }
}
