using System;

namespace cppast
{
    public class Visitor
    {
        public default virtual ~Visitor();
        public virtual void Visit(CompileUnitNode& compileUnitNode) {}
        public virtual void Visit(SourceFileNode& sourceFileNode) {}
        public virtual void Visit(TemplateDeclarationNode& templateDeclarationNode) {}
        public virtual void Visit(TemplateParameterNode& templateParameterNode) {}
        public virtual void Visit(ExplicitInstantiationNode& explicitInstantiationNode) {}
        public virtual void Visit(ExplicitSpecializationNode& explicitSpecializationNode) {}
        public virtual void Visit(FloatingLiteralNode& floatingLiteralNode) {}
        public virtual void Visit(IntegerLiteralNode& integerLiteralNode) {}
        public virtual void Visit(CharacterLiteralNode& characterLiteralNode) {}
        public virtual void Visit(StringLiteralNode& stringLiteralNode) {}
        public virtual void Visit(BooleanLiteralNode& booleanLiteralNode) {}
        public virtual void Visit(PointerLiteralNode& pointerLiteralNode) {}
        public virtual void Visit(SimpleTypeNode& simpleTypeNode) {}
        public virtual void Visit(IdentifierNode& identifierNode) {}
        public virtual void Visit(ColonColonNode& colonColonNode) {}
        public virtual void Visit(DotNode& dotNode) {}
        public virtual void Visit(ArrowNode& arrowNode) {}
        public virtual void Visit(TemplateIdNode& templateIdNode) {}
        public virtual void Visit(ConstNode& constNode) {}
        public virtual void Visit(VolatileNode& volatileNode) {}
        public virtual void Visit(PointerNode& pointerNode) {}
        public virtual void Visit(RvalueRefNode& rvalueRefNode) {}
        public virtual void Visit(LvalueRefNode& lvalueRefNode) {}
        public virtual void Visit(ArrayTypeNode& arrayTypeNode) {}
        public virtual void Visit(OperatorFunctionIdNode& operatorFunctionIdNode) {}
        public virtual void Visit(ConversionFunctionIdNode& conversionFunctionIdNode) {}
        public virtual void Visit(FunctionPtrIdNode& functionPtrIdNode) {}
        public virtual void Visit(MemberFunctionPtrIdNode& memberFunctionPtrIdNode) {}
        public virtual void Visit(DestructorIdNode& destructorIdNode) {}
        public virtual void Visit(BinaryExpressionNode& binaryExpressionNode) {}
        public virtual void Visit(UnaryExpressionNode& unaryExpressionNode) {}
        public virtual void Visit(ExpressionListNode& expressionListNode) {}
        public virtual void Visit(ConditionalExpressionNode& conditionalExpressionNode) {}
        public virtual void Visit(ThrowExpressionNode& throwExpressionNode) {}
        public virtual void Visit(CastExpressionNode& castExpressionNode) {}
        public virtual void Visit(PrefixIncrementNode& prefixIncrementNode) {}
        public virtual void Visit(PrefixDecrementNode& prefixDecrementNode) {}
        public virtual void Visit(SizeOfExpressionNode& sizeOfExpressionNode) {}
        public virtual void Visit(AlignOfExpressionNode& alignOfExpressionNode) {}
        public virtual void Visit(NewExpressionNode& newExpressionNode) {}
        public virtual void Visit(DeleteExpressionNode& deleteExpressionNode) {}
        public virtual void Visit(SubscriptExpressionNode& subscriptExpressionNode) {}
        public virtual void Visit(InvokeExpressionNode& invokeExpressionNode) {}
        public virtual void Visit(PostfixIncrementNode& postfixIncrementNode) {}
        public virtual void Visit(PostfixDecrementNode& postfixDecrementNode) {}
        public virtual void Visit(AssignCapture& assignCapture) {}
        public virtual void Visit(RefCapture& refCapture) {}
        public virtual void Visit(IdentifierCapture& identifierCapture) {}
        public virtual void Visit(ThisCapture& thisCapture) {}
        public virtual void Visit(LambdaExpressionNode& lambdaExpressionNode) {}
        public virtual void Visit(ParenthesizedExpressionNode& parenthesizedExpressionNode) {}
        public virtual void Visit(ThisNode& thisNode) {}
        public virtual void Visit(CppCastNode& cppCastNode) {}
        public virtual void Visit(TypeIdNode& typeIdNode) {}
        public virtual void Visit(DefinedNode& definedNode) {}
        public virtual void Visit(InitDeclaratorNode& initDeclaratorNode) {}
        public virtual void Visit(ArrayDeclaratorNode& arrayDeclaratorNode) {}
        public virtual void Visit(InitializerListNode& initializerListNode) {}
        public virtual void Visit(BracedInitializerListNode& bracedInitializerListNode) {}
        public virtual void Visit(AssignmentInitializerNode& assignmentInitializerNode) {}
        public virtual void Visit(FunctionNode& functionNode) {}
        public virtual void Visit(FunctionDeclaratorNode& functionDeclaratorNode) {}
        public virtual void Visit(ParameterNode& parameterNode) {}
        public virtual void Visit(ParameterListNode& parameterListNode) {}
        public virtual void Visit(SimpleDeclarationNode& simpleDeclarationNode) {}
        public virtual void Visit(UsingTypeDeclarationNode& usingTypeDeclarationNode) {}
        public virtual void Visit(UsingDirectiveNode& usingDirectiveNode) {}
        public virtual void Visit(UsingDeclarationNode& usingDeclarationNode) {}
        public virtual void Visit(StaticAssertDeclarationNode& staticAssertDeclarationNode) {}
        public virtual void Visit(TypedefDeclarationNode& typedefDeclarationNode) {}
        public virtual void Visit(LinkageSpecificationNode& linkageSpecificationNode) {}
        public virtual void Visit(NamespaceNode& namespaceNode) {}
        public virtual void Visit(ForwardClassDeclarationNode& forwardClassDeclarationNode) {}
        public virtual void Visit(ClassNode& classNode) {}
        public virtual void Visit(BaseClassListNode& baseClassListNode) {}
        public virtual void Visit(BaseClassNode& baseClassNode) {}
        public virtual void Visit(MemberDeclarationNode& memberDeclarationNode) {}
        public virtual void Visit(SpecialMemberFunctionNode& specialMemberFunctionNode) {}
        public virtual void Visit(CtorInitializerNode& ctorInitializerNode) {}
        public virtual void Visit(MemberInitializerNode& memberInitializerNode) {}
        public virtual void Visit(LabeledStatementNode& labeledStatementNode) {}
        public virtual void Visit(CaseStatementNode& caseStatementNode) {}
        public virtual void Visit(DefaultStatementNode& defaultStatementNode) {}
        public virtual void Visit(ExpressionStatementNode& expressionStatementNode) {}
        public virtual void Visit(CompoundStatementNode& compoundStatementNode) {}
        public virtual void Visit(EnumTypeNode& enumTypeNode) {}
        public virtual void Visit(EnumeratorNode& enumeratorNode) {}
        public virtual void Visit(IfStatementNode& ifStatementNode) {}
        public virtual void Visit(SwitchStatementNode& switchStatementNode) {}
        public virtual void Visit(WhileStatementNode& whileStatementNode) {}
        public virtual void Visit(DoStatementNode& doStatementNode) {}
        public virtual void Visit(RangeForStatementNode& rangeForStatementNode) {}
        public virtual void Visit(ForStatementNode& forStatementNode) {}
        public virtual void Visit(BreakStatementNode& breakStatementNode) {}
        public virtual void Visit(ContinueStatementNode& continueStatementNode) {}
        public virtual void Visit(ReturnStatementNode& returnStatementNode) {}
        public virtual void Visit(GotoStatementNode& gotoStatementNode) {}
        public virtual void Visit(DeclarationStatementNode& declarationStatementNode) {}
        public virtual void Visit(TryStatementNode& tryStatementNode) {}
        public virtual void Visit(ExceptionHandlerNode& exceptionHandlerNode) {}
        public virtual void Visit(CatchAllNode& catchAllNode) {}
    }
}
