using System;

namespace ParserFileKeywords
{
    internal class Keywords
    {
        static Keywords() :
            instance(new Keywords())
        {
        }
        public static Keywords& Instance()
        {
            return *instance;
        }
        public System.Lex.KeywordMap* GetKeywordMap()
        {
            return keywordMap.Get();
        }
        private Keywords()
        {
            System.Lex.Keyword keyword0(u"parser", ParserFileTokens.PARSER);
            keywordList.Add(keyword0);
            System.Lex.Keyword keyword1(u"main", ParserFileTokens.MAIN);
            keywordList.Add(keyword1);
            System.Lex.Keyword keyword2(u"uselexer", ParserFileTokens.USELEXER);
            keywordList.Add(keyword2);
            System.Lex.Keyword keyword3(u"ruleinfo", ParserFileTokens.RULEINFO);
            keywordList.Add(keyword3);
            System.Lex.Keyword keyword4(u"empty", ParserFileTokens.EMPTY);
            keywordList.Add(keyword4);
            System.Lex.Keyword keyword5(u"var", ParserFileTokens.VAR);
            keywordList.Add(keyword5);
            System.Lex.Keyword keyword6(u"assert", ParserFileTokens.ASSERT);
            keywordList.Add(keyword6);
            System.Lex.Keyword keyword7(u"elif", ParserFileTokens.ELIF);
            keywordList.Add(keyword7);
            System.Lex.Keyword keyword8(u"endif", ParserFileTokens.ENDIF);
            keywordList.Add(keyword8);
            System.Lex.Keyword keyword9(u"bool", ParserFileTokens.BOOL);
            keywordList.Add(keyword9);
            System.Lex.Keyword keyword10(u"true", ParserFileTokens.TRUE);
            keywordList.Add(keyword10);
            System.Lex.Keyword keyword11(u"false", ParserFileTokens.FALSE);
            keywordList.Add(keyword11);
            System.Lex.Keyword keyword12(u"sbyte", ParserFileTokens.SBYTE);
            keywordList.Add(keyword12);
            System.Lex.Keyword keyword13(u"byte", ParserFileTokens.BYTE);
            keywordList.Add(keyword13);
            System.Lex.Keyword keyword14(u"short", ParserFileTokens.SHORT);
            keywordList.Add(keyword14);
            System.Lex.Keyword keyword15(u"ushort", ParserFileTokens.USHORT);
            keywordList.Add(keyword15);
            System.Lex.Keyword keyword16(u"int", ParserFileTokens.INT);
            keywordList.Add(keyword16);
            System.Lex.Keyword keyword17(u"uint", ParserFileTokens.UINT);
            keywordList.Add(keyword17);
            System.Lex.Keyword keyword18(u"long", ParserFileTokens.LONG);
            keywordList.Add(keyword18);
            System.Lex.Keyword keyword19(u"ulong", ParserFileTokens.ULONG);
            keywordList.Add(keyword19);
            System.Lex.Keyword keyword20(u"float", ParserFileTokens.FLOAT);
            keywordList.Add(keyword20);
            System.Lex.Keyword keyword21(u"double", ParserFileTokens.DOUBLE);
            keywordList.Add(keyword21);
            System.Lex.Keyword keyword22(u"char", ParserFileTokens.CHAR);
            keywordList.Add(keyword22);
            System.Lex.Keyword keyword23(u"wchar", ParserFileTokens.WCHAR);
            keywordList.Add(keyword23);
            System.Lex.Keyword keyword24(u"uchar", ParserFileTokens.UCHAR);
            keywordList.Add(keyword24);
            System.Lex.Keyword keyword25(u"void", ParserFileTokens.VOID);
            keywordList.Add(keyword25);
            System.Lex.Keyword keyword26(u"enum", ParserFileTokens.ENUM);
            keywordList.Add(keyword26);
            System.Lex.Keyword keyword27(u"cast", ParserFileTokens.CAST);
            keywordList.Add(keyword27);
            System.Lex.Keyword keyword28(u"interface", ParserFileTokens.INTERFACE);
            keywordList.Add(keyword28);
            System.Lex.Keyword keyword29(u"namespace", ParserFileTokens.NAMESPACE);
            keywordList.Add(keyword29);
            System.Lex.Keyword keyword30(u"using", ParserFileTokens.USING);
            keywordList.Add(keyword30);
            System.Lex.Keyword keyword31(u"static", ParserFileTokens.STATIC);
            keywordList.Add(keyword31);
            System.Lex.Keyword keyword32(u"extern", ParserFileTokens.EXTERN);
            keywordList.Add(keyword32);
            System.Lex.Keyword keyword33(u"as", ParserFileTokens.AS);
            keywordList.Add(keyword33);
            System.Lex.Keyword keyword34(u"is", ParserFileTokens.IS);
            keywordList.Add(keyword34);
            System.Lex.Keyword keyword35(u"explicit", ParserFileTokens.EXPLICIT);
            keywordList.Add(keyword35);
            System.Lex.Keyword keyword36(u"delegate", ParserFileTokens.DELEGATE);
            keywordList.Add(keyword36);
            System.Lex.Keyword keyword37(u"inline", ParserFileTokens.INLINE);
            keywordList.Add(keyword37);
            System.Lex.Keyword keyword38(u"cdecl", ParserFileTokens.CDECL);
            keywordList.Add(keyword38);
            System.Lex.Keyword keyword39(u"nothrow", ParserFileTokens.NOTHROW);
            keywordList.Add(keyword39);
            System.Lex.Keyword keyword40(u"public", ParserFileTokens.PUBLIC);
            keywordList.Add(keyword40);
            System.Lex.Keyword keyword41(u"protected", ParserFileTokens.PROTECTED);
            keywordList.Add(keyword41);
            System.Lex.Keyword keyword42(u"private", ParserFileTokens.PRIVATE);
            keywordList.Add(keyword42);
            System.Lex.Keyword keyword43(u"internal", ParserFileTokens.INTERNAL);
            keywordList.Add(keyword43);
            System.Lex.Keyword keyword44(u"virtual", ParserFileTokens.VIRTUAL);
            keywordList.Add(keyword44);
            System.Lex.Keyword keyword45(u"abstract", ParserFileTokens.ABSTRACT);
            keywordList.Add(keyword45);
            System.Lex.Keyword keyword46(u"override", ParserFileTokens.OVERRIDE);
            keywordList.Add(keyword46);
            System.Lex.Keyword keyword47(u"suppress", ParserFileTokens.SUPPRESS);
            keywordList.Add(keyword47);
            System.Lex.Keyword keyword48(u"operator", ParserFileTokens.OPERATOR);
            keywordList.Add(keyword48);
            System.Lex.Keyword keyword49(u"class", ParserFileTokens.CLASS);
            keywordList.Add(keyword49);
            System.Lex.Keyword keyword50(u"return", ParserFileTokens.RETURN);
            keywordList.Add(keyword50);
            System.Lex.Keyword keyword51(u"if", ParserFileTokens.IF);
            keywordList.Add(keyword51);
            System.Lex.Keyword keyword52(u"else", ParserFileTokens.ELSE);
            keywordList.Add(keyword52);
            System.Lex.Keyword keyword53(u"switch", ParserFileTokens.SWITCH);
            keywordList.Add(keyword53);
            System.Lex.Keyword keyword54(u"case", ParserFileTokens.CASE);
            keywordList.Add(keyword54);
            System.Lex.Keyword keyword55(u"default", ParserFileTokens.DEFAULT);
            keywordList.Add(keyword55);
            System.Lex.Keyword keyword56(u"while", ParserFileTokens.WHILE);
            keywordList.Add(keyword56);
            System.Lex.Keyword keyword57(u"do", ParserFileTokens.DO);
            keywordList.Add(keyword57);
            System.Lex.Keyword keyword58(u"for", ParserFileTokens.FOR);
            keywordList.Add(keyword58);
            System.Lex.Keyword keyword59(u"break", ParserFileTokens.BREAK);
            keywordList.Add(keyword59);
            System.Lex.Keyword keyword60(u"continue", ParserFileTokens.CONTINUE);
            keywordList.Add(keyword60);
            System.Lex.Keyword keyword61(u"goto", ParserFileTokens.GOTO);
            keywordList.Add(keyword61);
            System.Lex.Keyword keyword62(u"typedef", ParserFileTokens.TYPEDEF);
            keywordList.Add(keyword62);
            System.Lex.Keyword keyword63(u"typename", ParserFileTokens.TYPENAME);
            keywordList.Add(keyword63);
            System.Lex.Keyword keyword64(u"typeid", ParserFileTokens.TYPEID);
            keywordList.Add(keyword64);
            System.Lex.Keyword keyword65(u"const", ParserFileTokens.CONST);
            keywordList.Add(keyword65);
            System.Lex.Keyword keyword66(u"constexpr", ParserFileTokens.CONSTEXPR);
            keywordList.Add(keyword66);
            System.Lex.Keyword keyword67(u"null", ParserFileTokens.NULLLIT);
            keywordList.Add(keyword67);
            System.Lex.Keyword keyword68(u"this", ParserFileTokens.THIS);
            keywordList.Add(keyword68);
            System.Lex.Keyword keyword69(u"base", ParserFileTokens.BASE);
            keywordList.Add(keyword69);
            System.Lex.Keyword keyword70(u"construct", ParserFileTokens.CONSTRUCT);
            keywordList.Add(keyword70);
            System.Lex.Keyword keyword71(u"destroy", ParserFileTokens.DESTROY);
            keywordList.Add(keyword71);
            System.Lex.Keyword keyword72(u"new", ParserFileTokens.NEW);
            keywordList.Add(keyword72);
            System.Lex.Keyword keyword73(u"delete", ParserFileTokens.DELETE);
            keywordList.Add(keyword73);
            System.Lex.Keyword keyword74(u"sizeof", ParserFileTokens.SIZEOF);
            keywordList.Add(keyword74);
            System.Lex.Keyword keyword75(u"try", ParserFileTokens.TRY);
            keywordList.Add(keyword75);
            System.Lex.Keyword keyword76(u"catch", ParserFileTokens.CATCH);
            keywordList.Add(keyword76);
            System.Lex.Keyword keyword77(u"throw", ParserFileTokens.THROW);
            keywordList.Add(keyword77);
            System.Lex.Keyword keyword78(u"concept", ParserFileTokens.CONCEPT);
            keywordList.Add(keyword78);
            System.Lex.Keyword keyword79(u"where", ParserFileTokens.WHERE);
            keywordList.Add(keyword79);
            System.Lex.Keyword keyword80(u"axiom", ParserFileTokens.AXIOM);
            keywordList.Add(keyword80);
            System.Lex.Keyword keyword81(u"and", ParserFileTokens.AND);
            keywordList.Add(keyword81);
            System.Lex.Keyword keyword82(u"or", ParserFileTokens.OR);
            keywordList.Add(keyword82);
            System.Lex.Keyword keyword83(u"unit_test", ParserFileTokens.UNIT_TEST);
            keywordList.Add(keyword83);
            System.Lex.Keyword nullKeyword(null, -1);
            keywordList.Add(nullKeyword);
            keywordMap.Reset(new System.Lex.KeywordMap(keywordList.CBegin().Ptr()));
        }
        private static System.UniquePtr<Keywords> instance;
        private System.Collections.List<System.Lex.Keyword> keywordList;
        private System.UniquePtr<System.Lex.KeywordMap> keywordMap;
    }

    public System.Lex.KeywordMap* GetKeywordMap()
    {
        return Keywords.Instance().GetKeywordMap();
    }
} // namespace ParserFileKeywords
