using System;
using System.IO;
using System.Collections;
using soulcm.scm2html;

string Version()
{
    return "3.0.0";
}

void PrintHelp()
{
    Console.Out() << "SoulCM HTML grammar generator version " << Version() << endl();
    Console.Out() << "Usage: scm2html [options] { SCM2HTMLFILE.xml }" << endl();
    Console.Out() << "options:" << endl();
    Console.Out() << "--help | -h:" << endl();
    Console.Out() << "  Print help and exit." << endl();
    Console.Out() << "--verbose | -v" << endl();
    Console.Out() << "  Be verbose." << endl();
}

int main(int argc, const char** argv)
{
    try
    {
        bool verbose = false;
        List<string> filePaths;
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else if (arg == "--verbose")
                {
                    verbose = true;
                }
                else
                {
                    throw Exception("unknown option \'" + arg + "\'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                string options = arg.Substring(1);
                for (char o : options)
                {
                    switch (o)
                    {
                        case 'h': PrintHelp();
                        return 1;
                        case 'v': verbose = true;
                        break;
                        default: 
                        {
                            throw Exception("unknown option \'-" + string(o) + "\'");
                            break;
                        }
                    }
                }
            }
            else
            {
                filePaths.Add(GetFullPath(arg));
            }
        }
        for (const string& scm2htmlFilePath : filePaths)
        {
            Scm2htmlXml xml(scm2htmlFilePath);
            xml.Process(verbose);
        }
        if (verbose)
        {
            Console.WriteLine("done.");
        }
    }
    catch (const Exception& ex)
    {
        Console.Error() << ex.Message() << endl();
        return 1;
    }
    return 0;
}
