// =================================
// Copyright (c) 2022 Seppo Laakko
// Distributed under the MIT license
// =================================

namespace System
{
	public const int EFAIL = 1;
	public const int EBADF = 2;
	public const int EPARAM = 3;
	public const int EMEMORYACCESS = 4;
	public const int ENOTFOUND = 5;
	public const int EALREADYEXISTS = 6;
	public const int ELIMITEXCEEDED = 7;

    public class SystemError : Exception
    {
        public nothrow SystemError(int errorCode_, const string& message_) : base(message_), errorCode(errorCode_)
        {
        }
        public int errorCode;
    }
    
    public SystemError GetSystemError()
    {
/*	
        int errorCode;
        UniquePtr<byte> buffer(cast<byte*>(MemAlloc(1024)));
        get_system_error(&errorCode, buffer.Get(), 1024);
        string errorMessage;
        byte* p = buffer.Get();
        while (*p != 0u)
        {
            errorMessage.Append(cast<char>(*p));
            ++p;
        }
*/		
		int errorCode = EFAIL;
		string errorMessage = "GetSystemError not implemented yet";
        return SystemError(errorCode, errorMessage);
    }
    
    public void ThrowSystemError()
    {
        //throw GetSystemError(); TODO
		exit(1u);
    }
}
