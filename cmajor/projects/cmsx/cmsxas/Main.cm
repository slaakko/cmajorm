using System;
using System.IO;
using System.Collections;
using System.Text.Parsing;
using cmsx.assembly;

public nothrow const char* Version()
{
    return "0.2.0";
}

public nothrow void PrintHelp()
{
    Console.Out() << "Cmajor System X Assembler version " << Version() << endl();
    Console.Out() << "Usage: cmsxas [options] { <file>.s }" << endl();
    Console.Out() << "Options: " << endl();
    Console.Out() << "   --help (-h)" << endl();
    Console.Out() << "      print this help" << endl();
    Console.Out() << "   --verbose (-v)" << endl();
    Console.Out() << "      be verbose" << endl();
    Console.Out() << "   --outdir=DIR (-o=DIR)" << endl();
    Console.Out() << "      set output directory to DIR" << endl();
}

int main(int argc, const char** argv)
{
    try
    {
        List<string> assemblyFiles;
        bool verbose = false;
        string outdir;
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else if (arg == "--verbose")
                {
                    verbose = true;
                }
                else if (arg.StartsWith("--outdir="))
                {
                    outdir = arg.Substring(9);
                }
                else
                {
                    throw Exception("unknown option '" + arg + "'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                if (arg.StartsWith("-o="))
                {
                    outdir = arg.Substring(3);
                }
                else
                {
                    string options = arg.Substring(1);
                    if (options.IsEmpty())
                    {
                        throw Exception("unknown option '" + arg + "'");
                    }
                    else
                    {
                        for (char o : options)
                        {
                            if (o == 'h')
                            {
                                PrintHelp();
                                return 1;
                            }
                            else if (o == 'v')
                            {
                                verbose = true;
                            }
                            else
                            {
                                throw Exception("unknown option '-" + string(o) + "'");
                            }
                        }
                    }
                }
            }
            else
            {
                assemblyFiles.Add(GetFullPath(arg));
            }
        }
        if (verbose)
        {
            Console.Out() << "Cmajor System X Assembler version " << Version() << endl();
        }
        if (assemblyFiles.IsEmpty())
        {
            PrintHelp();
            throw Exception("no assembly files given");
        }
        FileInfo.Instance().SetFiles(assemblyFiles);
        long n = assemblyFiles.Count();
        for (long i = 0; i < n; ++i)
        {
            const string& assemblyFileName = assemblyFiles[i];
            string assemblyFilePath = GetFullPath(assemblyFileName);
            ProcessAssemblyFile(i, assemblyFilePath, verbose, outdir);
        }
    }
    catch (const Exception& ex)
    {
        Console.Error() << ex.Message() << endl();
        return 1;
    }
    return 0;
}
