// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;

namespace System.Text.Parsing
{
    public class Visitor
    {
        public default virtual ~Visitor();
        public virtual void BeginVisit(Namespace& ns) {}
        public virtual void EndVisit(Namespace& ns) {}
        public virtual void BeginVisit(Grammar& grammar) {}
        public virtual void EndVisit(Grammar& grammar) {}
        public virtual void BeginVisit(RuleParser& rule) {}
        public virtual void EndVisit(RuleParser& rule) {}
        public virtual void Visit(RuleLink& ruleLink) {}
        public virtual void Visit(KeywordParser& keywordParser) {}
        public virtual void Visit(KeywordListParser& keywordListParser) {}
        public virtual void BeginVisit(OptionalParser& optionalParser) {}
        public virtual void EndVisit(OptionalParser& optionalParser) {}
        public virtual void BeginVisit(PositiveParser& positiveParser) {}
        public virtual void EndVisit(PositiveParser& positiveParser) {}
        public virtual void BeginVisit(KleeneStarParser& kleeneStarParser) {}
        public virtual void EndVisit(KleeneStarParser& kleeneStarParser) {}
        public virtual void BeginVisit(ExpectationParser& expectationParser) {}
        public virtual void EndVisit(ExpectationParser& expectationParser) {}
        public virtual void BeginVisit(TokenParser& tokenParser) {}
        public virtual void EndVisit(TokenParser& tokenParser) {}
        public virtual void BeginVisit(GroupingParser& groupingParser) {}
        public virtual void EndVisit(GroupingParser& groupingParser) {}
        public virtual void BeginVisit(ActionParser& actionParser) {}
        public virtual void EndVisit(ActionParser& actionParser) {}
        public virtual void BeginVisit(SequenceParser& sequenceParser) {}
        public virtual void Visit(SequenceParser& sequenceParser) {}
        public virtual void EndVisit(SequenceParser& sequenceParser) {}
        public virtual void BeginVisit(AlternativeParser& alternativeParser) {}
        public virtual void Visit(AlternativeParser& alternativeParser) {}
        public virtual void EndVisit(AlternativeParser& alternativeParser) {}
        public virtual void BeginVisit(DifferenceParser& differenceParser) {}
        public virtual void Visit(DifferenceParser& differenceParser) {}
        public virtual void EndVisit(DifferenceParser& differenceParser) {}
        public virtual void BeginVisit(ExclusiveOrParser& exclusiveOrParser) {}
        public virtual void Visit(ExclusiveOrParser& exclusiveOrParser) {}
        public virtual void EndVisit(ExclusiveOrParser& exclusiveOrParser) {}
        public virtual void BeginVisit(IntersectionParser& intersectionParser) {}
        public virtual void Visit(IntersectionParser& intersectionParser) {}
        public virtual void EndVisit(IntersectionParser& intersectionParser) {}
        public virtual void BeginVisit(ListParser& listParser) {}
        public virtual void Visit(ListParser& listParser) {}
        public virtual void EndVisit(ListParser& listParser) {}
        public virtual void Visit(NonterminalParser& nonterminalParser) {}
        public virtual void Visit(CharParser& charParser) {}
        public virtual void Visit(StringParser& stringParser) {}
        public virtual void Visit(CharSetParser& charSetParser) {}
        public virtual void Visit(EmptyParser& emptyParser) {}
        public virtual void Visit(SpaceParser& spaceParser) {}
        public virtual void Visit(LetterParser& letterParser) {}
        public virtual void Visit(UpperLetterParser& upperLetterParser) {}
        public virtual void Visit(LowerLetterParser& lowerLetterParser) {}
        public virtual void Visit(TitleLetterParser& titleLetterParser) {}
        public virtual void Visit(ModifierLetterParser& modifierLetterParser) {}
        public virtual void Visit(OtherLetterParser& otherLetterParser) {}
        public virtual void Visit(CasedLetterParser& casedLetterParser) {}
        public virtual void Visit(DigitParser& digitParser) {}
        public virtual void Visit(HexDigitParser& hexDigitParser) {}
        public virtual void Visit(MarkParser& markParser) {}
        public virtual void Visit(NonspacingMarkParser& nonspacingMarkParser) {}
        public virtual void Visit(SpacingMarkParser& spacingMarkParser) {}
        public virtual void Visit(EnclosingMarkParser& enclosingMarkParser) {}
        public virtual void Visit(NumberParser& numberParser) {}
        public virtual void Visit(DecimalNumberParser& decimalNumberParser) {}
        public virtual void Visit(LetterNumberParser& letterNumberParser) {}
        public virtual void Visit(OtherNumberParser& otherNumberParer) {}
        public virtual void Visit(PunctuationParser& punctuationParser) {}
        public virtual void Visit(ConnectorPunctuationParser& connectorPunctuationParser) {}
        public virtual void Visit(DashPunctuationParser& dashPunctuationParser) {}
        public virtual void Visit(OpenPunctuationParser& openPunctuationParser) {}
        public virtual void Visit(ClosePunctuationParser& closePunctuationParser) {}
        public virtual void Visit(InitialPunctuationParser& initialPunctuationParser) {}
        public virtual void Visit(FinalPunctuationParser& finalPunctuationParser) {}
        public virtual void Visit(OtherPunctuationParser& otherPunctuationParser) {}
        public virtual void Visit(SymbolParser& symbolParser) {}
        public virtual void Visit(MathSymbolParser& mathSymbolParser) {}
        public virtual void Visit(CurrencySymbolParser& currencySymbolParser) {}
        public virtual void Visit(ModifierSymbolParser& modifierSymbolParser) {}
        public virtual void Visit(OtherSymbolParser& otherSymbolParser) {}
        public virtual void Visit(SeparatorParser& separatorParser) {}
        public virtual void Visit(SpaceSeparatorParser& spaceSeparatorParser) {}
        public virtual void Visit(LineSeparatorParser& lineSeparatorParser) {}
        public virtual void Visit(ParagraphSeparatorParser& paragraphSeparatorParser) {}
        public virtual void Visit(OtherParser& otherParser) {}
        public virtual void Visit(ControlParser& controlParser) {}
        public virtual void Visit(FormatParser& formatParser) {}
        public virtual void Visit(SurrogateParser& surrogateParser) {}
        public virtual void Visit(PrivateUseParser& privateUseParser) {}
        public virtual void Visit(UnassignedParser& unassignedParser) {}
        public virtual void Visit(GraphicParser& graphicParser) {}
        public virtual void Visit(BaseCharParser& baseCharParser) {}
        public virtual void Visit(AlphabeticParser& alphabeticParser) {}
        public virtual void Visit(IdStartParser& idStartParser) {}
        public virtual void Visit(IdContParser& idContParser) {}
        public virtual void Visit(AnyCharParser& anyCharParser) {}
        public virtual void Visit(RangeParser& rangeParser) {}
    }
}
