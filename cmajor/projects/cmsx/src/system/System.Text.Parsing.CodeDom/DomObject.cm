// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Text;

namespace System.Text.Parsing.CodeDom
{
    public abstract class DomObject
    {
        public nothrow DomObject(const ustring& name_) : name(name_), parens(false)
        {
        }
        public nothrow virtual ustring Name() const
        {
            return name;
        }
        public nothrow void SetName(const ustring& name_)
        {
            name = name_;
        }
        public inline nothrow bool Parens() const
        {
            return parens;
        }
        public inline nothrow void SetParens()
        {
            parens = true;
        }
        public virtual void AddArgument(DomObject* argument)
        {
            throw Exception("AddArgument override not implemented");
        }
        public virtual void Print(CodeFormatter& formatter)
        {
            if (parens)
            {
                formatter.Write('(');
            }
            formatter.Write(ToUtf8(name));
            if (parens)
            {
                formatter.Write(')');
            }
        }
        public nothrow virtual int Rank() const
        {
            return 100;
        }
        public abstract void Accept(Visitor& visitor);
        private ustring name;
        private bool parens;
    }
}

