// =================================
// Copyright (c) 2020 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Os;
using System.Security;

void PrintHelp()
{
    Console.Out() << "Usage: whoami [options]" << endl();
    Console.Out() << "Print login name of current user to standard output." << endl() << endl();
    Console.Out() << "Options:" << endl() << endl();
    Console.Out() << "--help | -h" << endl();
    Console.Out() << "  Print help and exit." << endl() << endl();
    Console.Out() << "--diagnostics | -d" << endl();
    Console.Out() << "  Show stack trace in case of error." << endl() << endl();
}

int main(int argc, const char** argv)
{
    bool diagnostics = false;
    try
    {
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else if (arg == "--diagnostics")
                {
                    diagnostics = true;
                }
                else 
                {
                    throw Exception("unknown option '" + arg + "'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                string options = arg.Substring(1);
                if (options.IsEmpty())
                {
                    throw Exception("unknown option '" + arg + "'");
                }
                else
                {
                    for (char o : options)
                    {
                        if (o == 'h')
                        {
                            PrintHelp();
                            return 1;
                        }
                        else if (arg == 'd')
                        {
                            diagnostics = true;
                        }
                        else
                        {
                            throw Exception("unknown option '-" + string(o) + "'");
                        }
                    }
                }
            }
            else
            {
                throw Exception("unknown argument '" + arg + "'");
            }
        }
        int uid = GetUID();
        Users users = GetUsers();
        User* user = users.GetUser(uid);
        if (user != null)
        {
            Console.Out() << user->Name() << endl();
        }
        else
        {
            throw Exception("whoami: user id " + ToString(uid) + " not found"); 
        }
    }
    catch (const Exception& ex)
    {
        if (diagnostics)
        {
            Console.Error() << ex.ToString() << endl();
        }
        else
        {
            Console.Error() << ex.Message() << endl();
        }
        return 1;
    }
    return 0;
}
