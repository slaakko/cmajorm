// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Collections;

void PrintHelp()
{
    Console.Out() << 
        "Usage: echo [options] [ARG]..." << endl() << endl() <<
        "Print arguments to standard output." << endl() << endl() <<
        "Options:" << endl() << endl() <<
        "--help | -h" << endl() <<
        "   Print help and exit." << endl() << endl() <<
        "--diagnostics | -d" << endl() <<
        "   Show stack trace in case of error." << endl() << endl() <<
        "--no-trailing-newline | -n" << endl() <<
        "   Do not print the trailing newline." << endl() << endl();
}

int main(int argc, const char** argv)
{
    bool diagnostics = false;
    try
    {
        List<string> args;
        bool noNewLine = false;
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else if (arg == "--diagnostics")
                {
                    diagnostics = true;
                }
                else if (arg == "--no-trailing-newline")
                {
                    noNewLine = true;
                }
                else
                {
                    throw Exception("unknown option '" + arg + "'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                string options = arg.Substring(1);
                if (options.IsEmpty())
                {
                    throw Exception("unknown option '" + arg + "'");
                }
                else
                {
                    for (char o : options)
                    {
                        if (o == 'h')
                        {
                            PrintHelp();
                            return 1;
                        }
                        else if (o == 'd')
                        {
                            diagnostics = true;
                        }
                        else if (o == 'n')
                        {
                            noNewLine = true;
                        }
                        else 
                        {
                            throw Exception("unknown option '-" + string(o) + "'");
                        }
                    }
                }
            }
            else
            {
                args.Add(arg);
            }
        }
        bool first = true;
        for (const string& arg : args)
        {
            if (first)
            {
                first = false;
            }
            else
            {
                Console.Out() << " ";
            }
            Console.Out() << arg;
        }
        if (!noNewLine)
        {
            Console.Out() << endl();
        }
    }
    catch (const Exception& ex)
    {
        if (diagnostics)
        {
            Console.Error() << ex.ToString() << endl();
        }
        else
        {
            Console.Error() << ex.Message() << endl();
        }
        return 1;
    }
    return 0;
}
