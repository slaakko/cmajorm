// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Collections;
using System.IO;

void PrintHelp()
{
    Console.Out() << "Usage: tee [options] [FILE]..." << endl();
    Console.Out() << "Usage: Read standard input and write its content to standard output and each FILE." << endl() << endl();
    Console.Out() << "Options:" << endl() << endl();
    Console.Out() << "--help | -h" << endl();
    Console.Out() << "  Print help and exit." << endl() << endl();
    Console.Out() << "--diagnostics | -d" << endl();
    Console.Out() << "  Show stack trace in case of error." << endl() << endl();
}

void Tee(const List<string>& files)
{
    List<BinaryWriter> writers;
    for (const string& file : files)
    {
        writers.Add(File.CreateBinary(file));
    }
    int x = Console.In().Read();
    while (x != -1)
    {
        byte b = cast<byte>(x);
        for (BinaryWriter& writer : writers)
        {
            writer.Write(b);
        }
        Console.Out().GetStream()->Write(b);
        x = Console.In().Read();
    }
}

int main(int argc, const char** argv)
{
    bool diagnostics = false;
    try
    {
        List<string> files;
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else if (arg == "--diagnostics")
                {
                    diagnostics = true;
                }
                else 
                {
                    throw Exception("unknown option '" + arg + "'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                string options = arg.Substring(1);
                if (options.IsEmpty())
                {
                    throw Exception("unknown option '" + arg + "'");
                }
                else
                {
                    for (char o : options)
                    {
                        if (o == 'h')
                        {
                            PrintHelp();
                            return 1;
                        }
                        else if (o == 'd')
                        {
                            diagnostics = true;
                        }
                        else
                        {
                            throw Exception("unknown option '-" + string(o) + "'");
                        }
                    }
                }
            }
            else
            {
                files.Add(arg);
            }
        }
        Tee(files);
    }
    catch (const Exception& ex)
    {
        if (diagnostics)
        {
            Console.Error() << ex.ToString() << endl();
        }
        else
        {
            Console.Error() << ex.Message() << endl();
        }
    }
    return 0;
}
