using System;
using System.IO;
using cmsx.machine;

namespace cmsx.kernel
{
    public long Write(Machine& machine, Process* process, int handle, ulong bufferAddress, ulong count)
    {
        if (handle != stdout && handle != stderr)
        {
            return -1;
        }
        else if (count > 0)
        {
            UniquePtr<byte> buffer(cast<byte*>(RtMemAlloc(cast<long>(count))));
            int rv = ReadProcessMemory(machine, process, bufferAddress, buffer.Get(), count);
            if (rv != 0)
            {
                return -1;
            }
            ByteStream* stream = null;
            if (handle == stdout)
            {
                stream = Console.Out().ContainedStream().Get();
            }
            else if (handle == stderr)
            {
                stream = Console.Error().ContainedStream().Get();
            }
            else
            {
                return -1;
            }
            try
            {
                stream->Write(buffer.Get(), cast<long>(count));
            }
            catch (const Exception& ex)
            {
                return -1;
            }
            return cast<long>(count);
        }
        return 0;
    }
}
