using System;
using System.IO;
using System.Os;

void PrintHelp()
{
    Console.Out() << "Usage: [options] mkpasswd" << endl() <<
        "Make /etc directory if it does not exist." << endl() <<
        "Then make default /etc/passwd file." << endl() << endl() <<
        "Options:" << endl() << endl() <<
        "--help | -h" << endl() <<
        "   Print help." << endl() << endl() <<
        "--verbose | -v" << endl() <<
        "   Be verbose." << endl() << endl() <<
        "--diagnostics | -d" << endl() <<
        "   Show stack trace in case of error." << endl() << endl();
}

int main(int argc, const char** argv)
{
    bool diagnostics = false;
    try
    {
        bool verbose = false;
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else if (arg == "--verbose")
                {
                    verbose = true;
                }
                else if (arg == "--diagnostics")
                {
                    diagnostics = true;
                }
                else
                {
                    throw Exception("unknown option '" + arg + "'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                string options = arg.Substring(1);
                if (options.IsEmpty())
                {
                    throw Exception("unknown option '" + arg + "'");
                }
                else
                {
                    for (char o : options)
                    {
                        if (o == 'h')
                        {
                            PrintHelp();
                            return 1;
                        }
                        else if (o == 'v')
                        {
                            verbose = true;
                        }
                        else if (o == 'd')
                        {
                            diagnostics = true;
                        }
                        else
                        {
                            throw Exception("unknown option '-" + string(o) + "'");
                        }
                    }
                }
            }
        }
        if (!Directory.Exists("/etc"))
        {
            if (verbose)
            {
                Console.Out() << "/etc does not exist, creating...";
            }
            Mkdir("/etc");
            if (verbose)
            {
                Console.Out() << "\b\b\b, done." << endl();
            }
        }
        else
        {
            if (verbose)
            {
                Console.Out() << "/etc already exists." << endl();
            }
        }
        if (!File.Exists("/etc/passwd"))
        {
            if (verbose)
            {
                Console.Out() << "/etc/passwd does not exist, creating...";
            }
            StreamWriter writer(SharedPtr<Stream>(new FileStream("/etc/passwd", cast<OpenFlags>(OpenFlags.write | OpenFlags.create | OpenFlags.truncate), cast<int>(ParseOctal("644")))));
            writer << "root:root:142E4F84D6C5554052F32A6968E88EDCD56B118A" << endl();
            if (verbose)
            {
                Console.Out() << "\b\b\b, done." << endl();
            }
        }
        else
        {
            if (verbose)
            {
                Console.Out() << "/etc/passwd already exists." << endl();
            }
        }
        if (verbose)
        {
            Console.Out() << "Done." << endl();
        }
    }
    catch (const Exception& ex)
    {
        if (diagnostics)
        {
            Console.Error() << endl() << ex.ToString() << endl();
        }
        else
        {
            Console.Error() << endl() << ex.Message() << endl();
        }
        return 1;
    }
    return 0;
} 
