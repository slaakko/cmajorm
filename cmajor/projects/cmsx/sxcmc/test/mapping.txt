LOCAL VARIABLE
    REG
    FRAME LOC
    
ARGUMENT
    REG
    FRAME LOC

MEMBER VARIABLE
    REG

GLOBAL VARIABLE


RECEIVE:
========

// ARGUMENT:REG (1..5) -> LOCAL VARIBLE:REG (0..248)
SET $0,ax 
SET $1,bx
SET $2,cx
SET $3,dx
SET $4,ex

// ARGUMENT:FRAME LOC (6..37) -> LOCAL VARIABLE:REG (TYPE)

LDB $0,fp,8  : sbyte 
LDBU $0,fp,8 : byte
LDW $0,fp,8  : short
LDWU $0,fp,8 : ushort
LDT $0,fp,8  : int
LDTU $0,fp,8 : uint
LDO $0,fp,8  : long
LDOU $0,fp,8 : ulong

// ARGUMENT:FRAME LOC (38..8191) -> LOCAL VARIABLE:REG (TYPE)

// sbyte:
SET ix,8*38
LDB $0,fp,ix

// byte:
SET ix,8*38
LDBU $0,fp,ix

// short:
SET ix,8*38
LDW $0,fp,ix

// ushort:
SET ix,8*38
LDWU $0,fp,ix

// int:
SET ix,8*38
LDT $0,fp,ix

//uint:
SET ix,8*38
LDTU $0,fp,ix

// long:
SET ix,8*38
LDO $0,fp,ix

// ulong:
SET ix,8*38
LDOU $0,fp,ix

// ARGUMENT:FRAME LOC (1..8191) -> LOCAL VARIABLE:FRAME LOC(1..8191) (TYPE)

// sbyte:
SET ix,8 * argument frame loc
LDB ax,fp,ix
SET ix,8 * variable frame loc
STB ax,fp,ix

// byte:
SET ix,8 * argument frame loc
LDBU ax,fp,ix
SET ix,8 * variable frame loc
STBU ax,fp,ix

// short:
SET ix,8 * argument frame loc
LDW ax,fp,ix
SET ix,8 * variable frame loc
STW ax,fp,ix

// ushort:
SET ix,8 * argument frame loc
LDWU ax,fp,ix
SET ix,8 * variable frame loc
STWU ax,fp,ix

// int:
SET ix,8 * argument frame loc
LDT ax,fp,ix
SET ix,8 * variable frame loc
STT ax,fp,ix

// uint:
SET ix,8 * argument frame loc
LDTU ax,fp,ix
SET ix,8 * variable frame loc
STTU ax,fp,ix

// long:
SET ix,8 * argument frame loc
LDO ax,fp,ix
SET ix,8 * variable frame loc
STO ax,fp,ix

// ulong:
SET ix,8 * argument frame loc
LDOU ax,fp,ix
SET ix,8 * variable frame loc
STOU ax,fp,ix
