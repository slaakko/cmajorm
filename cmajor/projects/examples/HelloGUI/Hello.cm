using System;
using System.Windows;

class HelloWindow : Window
{
    public HelloWindow() : base("Hello"), numHellos(0), color(0u, 0x5au, 0xb4u), brush(color), fontFamily(FontFamily.GenericSansSerif()), font(fontFamily, 14.0f)
    {
        Size s = GetSize();
        int w = 100;
        int h = 40;
        int x = s.w - w - 10;
        int y = s.h - h - 10;
        UniquePtr<Button> helloButton(new Button("Hello", Point(x, y), Size(w, h), Dock.none, cast<Anchors>(Anchors.bottom | Anchors.right)));
        helloButton->ClickEvent().AddHandler(HelloButtonClick);
        AddChild(helloButton.Release());
        PaintEvent().AddHandler(Paint);
    }
    private void HelloButtonClick()
    {
        ++numHellos;
        Invalidate();
    }
    private void Paint(PaintEventArgs& args)
    {
        try
        {
            PointF origin(10.0f, 10.0f);
            for (int i = 0; i < numHellos; ++i)
            {
                args.graphics.DrawStringChecked("Hello, World!", font, origin, brush);
                origin.y = origin.y + font.GetHeight(args.graphics);
            }
        }
        catch (const Exception& ex)
        {
            MessageBox.Show(ex.Message(), "Error", this, cast<MessageBoxType>(MessageBoxType.MB_OK | MessageBoxType.MB_ICONSTOP));
        }
    }
    private int numHellos;
    private Color color;
    private SolidBrush brush;
    private FontFamily fontFamily;
    private Font font;
}

int main()
{
    try
    {
        HelloWindow helloWindow;
        return Application.Run(helloWindow);
    }
    catch (const Exception& ex)
    {
        MessageBox.Show(ex.Message(), "Error", null, cast<MessageBoxType>(MessageBoxType.MB_OK | MessageBoxType.MB_ICONSTOP));
        try
        {
            System.IO.StreamWriter errorWriter = System.IO.File.CreateText("error.txt");
            errorWriter << ex.ToString() << endl();
        }
        catch (const Exception& innerEx)
        {
        }
        return 1;
    }
    return 0;
}
