using System;

// this file has been automatically generated from 'D:/work/cmajorm/cmajor/projects/examples/BigNumCalc/BigNumLexer.lexer' using soulcm lexer generator scmlg version 3.0.0

namespace BigNumTokens
{
    public const int END = 0;
    public const int PLUS = 1;
    public const int MINUS = 2;
    public const int MUL = 3;
    public const int DIV = 4;
    public const int LPAREN = 5;
    public const int RPAREN = 6;
    public const int FLOAT = 7;
    public const int RATIONAL = 8;
    public const int INTEGER = 9;
    internal class TokenMap
    {
        static TokenMap() :
            instance(new TokenMap())
        {
        }
        public static TokenMap& Instance()
        {
            return *instance;
        }
        public int GetTokenId(const ustring& tokenName)
        {
            System.Collections.Map<ustring, int>.ConstIterator it = tokenIdMap.CFind(tokenName);
            if (it != tokenIdMap.CEnd())
            {
                return it->second;
            }
            else
            {
                return -1;
            }
        }
        public ustring GetTokenName(int tokenId)
        {
            return tokenNameList[tokenId];
        }
        public ustring GetTokenInfo(int tokenId)
        {
            return tokenInfoList[tokenId];
        }
        private TokenMap()
        {
            tokenIdMap[u"DIV"] = 4;
            tokenIdMap[u"FLOAT"] = 7;
            tokenIdMap[u"INTEGER"] = 9;
            tokenIdMap[u"LPAREN"] = 5;
            tokenIdMap[u"MINUS"] = 2;
            tokenIdMap[u"MUL"] = 3;
            tokenIdMap[u"PLUS"] = 1;
            tokenIdMap[u"RATIONAL"] = 8;
            tokenIdMap[u"RPAREN"] = 6;
            tokenNameList.Add(u"END");
            tokenInfoList.Add(u"end of file");
            tokenNameList.Add(u"PLUS");
            tokenInfoList.Add(u"'+'");
            tokenNameList.Add(u"MINUS");
            tokenInfoList.Add(u"'-'");
            tokenNameList.Add(u"MUL");
            tokenInfoList.Add(u"'*'");
            tokenNameList.Add(u"DIV");
            tokenInfoList.Add(u"'/'");
            tokenNameList.Add(u"LPAREN");
            tokenInfoList.Add(u"'('");
            tokenNameList.Add(u"RPAREN");
            tokenInfoList.Add(u"')'");
            tokenNameList.Add(u"FLOAT");
            tokenInfoList.Add(u"'float");
            tokenNameList.Add(u"RATIONAL");
            tokenInfoList.Add(u"'rational'");
            tokenNameList.Add(u"INTEGER");
            tokenInfoList.Add(u"'integer'");
        }
        private static System.UniquePtr<TokenMap> instance;
        private System.Collections.Map<ustring, int> tokenIdMap;
        private System.Collections.List<ustring> tokenNameList;
        private System.Collections.List<ustring> tokenInfoList;
    }
    public int GetTokenId(const ustring& tokenName)
    {
        return TokenMap.Instance().GetTokenId(tokenName);
    }
    public ustring GetTokenName(int tokenId)
    {
        return TokenMap.Instance().GetTokenName(tokenId);
    }
    public ustring GetTokenInfo(int tokenId)
    {
        return TokenMap.Instance().GetTokenInfo(tokenId);
    }
} // namespace BigNumTokens
