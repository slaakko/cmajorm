// =================================
// Copyright (c) 2021 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Collections;

namespace Cm.Symbols
{
    public class ModuleCache
    {
        static ModuleCache() : instance(new ModuleCache())
        {
        }
        public static nothrow ModuleCache& Instance()
        {
            return *instance;
        }
        public nothrow Module* GetModuleById(const Uuid& moduleId) const
        {
            HashMap<Uuid, Module*>.ConstIterator it = moduleIdMap.CFind(moduleId);
            if (it != moduleIdMap.CEnd())
            {
                return it->second;
            }
            else
            {
                return null;
           }
        }
        private static UniquePtr<ModuleCache> instance;
        private HashMap<Uuid, Module*> moduleIdMap;
    }

    public nothrow Module* GetModuleById(const Uuid& moduleId)
    {
        return ModuleCache.Instance().GetModuleById(moduleId);
    }
}

