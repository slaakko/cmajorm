using System;
using System.Collections;

// this file has been semiautomatically generated from 'D:/work/soulng-project/sngcm/ast/Comment.hpp' using cpp2cm version 1.0.0

// this file has been semiautomatically generated from 'D:/work/soulng-project/sngcm/ast/Comment.cpp' using cpp2cm version 1.0.0

namespace Cm.Ast
{
    public class CommentNode : Node
    {
        public nothrow CommentNode(const System.Lex.Span& span_, const Uuid& moduleId_) :
            base(NodeType.commentNode, span_, moduleId_)
        {
        }
        public nothrow CommentNode(const System.Lex.Span& span_, const Uuid& moduleId_, const ustring& comment_) :
            base(NodeType.commentNode, span_, moduleId_), comment(comment_)
        {
        }
        public nothrow const ustring& Comment() const
        {
            return comment;
        }
        public override Node* Clone(CloneContext& cloneContext) const
        {
            return new CommentNode(GetSpan(), ModuleId(), comment);
        }
        public override void Accept(Visitor& visitor)
        {
            visitor.Visit(*this);
        }
        public override nothrow void Write(AstWriter& writer)
        {
            base->Write(writer);
            writer.GetBinaryWriter().Write(comment);
        }
        public override void Read(AstReader& reader)
        {
            base->Read(reader);
            comment = reader.GetBinaryReader().ReadUString();
        }
        private ustring comment;
    }
} // namespace Cm.Ast
