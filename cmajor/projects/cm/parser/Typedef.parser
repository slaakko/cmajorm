// =================================
// Copyright (c) 2021 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using Cm.Ast;
using Cm.Lexer;
using Cm.Parser;
using CmajorTokens;

parser TypedefParser
{
    uselexer CmajorLexer;
    
    using SpecifierParser.Specifiers;
    using TypeExprParser.TypeExpr;
    using IdentifierParser.Identifier;
    
    Typedef(ParsingContext* ctx, var Span s) : TypedefNode*
        ::= Specifiers:specifiers{ s = span; } TYPEDEF TypeExpr(ctx):type! Identifier:id! SEMICOLON!{ s.end = span.end; return new TypedefNode(s, specifiers, type, id); }
        ;
}
