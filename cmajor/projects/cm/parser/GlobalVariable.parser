// =================================
// Copyright (c) 2020 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using Cm.Ast;
using Cm.Lexer;
using Cm.Parser;
using CmajorTokens;

parser GlobalVariableParser
{
    uselexer CmajorLexer;

    using SpecifierParser.Specifiers;
    using TypeExprParser.TypeExpr;
    using IdentifierParser.Identifier;
    using ExpressionParser.Expression;
    
    GlobalVariable(ParsingContext* ctx, CompileUnitNode* cu, var Span s) : GlobalVariableNode*
        ::= Specifiers:specifiers{ s = span; } TypeExpr(ctx):type Identifier:id (ASSIGN Expression(ctx):initializer)? SEMICOLON
        {
            s.end = span.end;
            GlobalVariableNode* value = new GlobalVariableNode(s, specifiers, type, id, cu); 
            value->SetInitializer(initializer);
            return value;
        }
        ;
}
