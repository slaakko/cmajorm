// =================================
// Copyright (c) 2020 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using Cm.Ast;
using Cm.Lexer;
using Cm.Parser;
using CmajorTokens;

parser ConstantParser
{
    uselexer CmajorLexer;

    using SpecifierParser.Specifiers;
    using TypeExprParser.TypeExpr;
    using ExpressionParser.Expression;
    using IdentifierParser.Identifier;
    
    Constant(ParsingContext* ctx, var Span s, var Span v, var UniquePtr<Node> e) : ConstantNode*
        ::= Specifiers:specifiers{ s = span; } CONST TypeExpr(ctx):type! Identifier:id!{ v = span; } ASSIGN Expression(ctx):expr{ e.Reset(expr); } SEMICOLON
        {
            e->SetFullSpan();
            v.end = e->GetSpan().end;
            s.end = e->GetSpan().end;
            ConstantNode* value = new ConstantNode(s, specifiers, type, id, e.Release());
            value->SetStrValue(lexer.GetMatch(v));
            return value;
        }
        ;
}
