<boundTree>
 <BoundCompileUnit info="QuickSort.cm">
  <BoundNamespace info="">
   <BoundNamespace info="">
    <BoundNamespace info="System">
     <BoundNamespace info="">
      <BoundNamespace info="System"/>
     </BoundNamespace>
    </BoundNamespace>
   </BoundNamespace>
   <BoundFunction info="Partition(List&lt;int>&amp; intList, long left, long right)">
    <BoundCompoundStatement>
     <BoundIfStatement>
      <BoundFunctionCall>
       <BasicTypeUnaryOperation classArity="1" info="operator!">
        <returnType ref="type_1000000"/>
       </BasicTypeUnaryOperation>
       <BoundFunctionCall>
        <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
         <returnType ref="type_1000000"/>
        </BasicTypeComparisonOperation>
        <BoundParameter>
         <ParameterSymbol info="right">
          <type ref="type_1000001"/>
         </ParameterSymbol>
        </BoundParameter>
        <BoundParameter>
         <ParameterSymbol info="left">
          <type ref="type_1000001"/>
         </ParameterSymbol>
        </BoundParameter>
       </BoundFunctionCall>
      </BoundFunctionCall>
      <BoundEmptyStatement/>
      <BoundExpressionStatement>
       <BoundFunctionCall>
        <FunctionSymbol info="RtFailAssertion">
         <returnType ref="type_1000002"/>
        </FunctionSymbol>
        <BoundLiteral>
         <type ref="type_1000003"/>
         <StringValue info=""/>
        </BoundLiteral>
        <BoundLiteral>
         <type ref="type_1000003"/>
         <StringValue info=""/>
        </BoundLiteral>
        <BoundLiteral>
         <type ref="type_1000003"/>
         <StringValue info=""/>
        </BoundLiteral>
        <BoundLiteral>
         <type ref="type_1000004"/>
         <IntValue info="6"/>
        </BoundLiteral>
       </BoundFunctionCall>
      </BoundExpressionStatement>
     </BoundIfStatement>
     <BoundConstructionStatement>
      <BoundFunctionCall>
       <BasicTypeCopyCtor info=""/>
       <BoundLocalVariable>
        <LocalVariableSymbol info="i">
         <type ref="type_1000001"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
       <BoundParameter>
        <ParameterSymbol info="left">
         <type ref="type_1000001"/>
        </ParameterSymbol>
       </BoundParameter>
      </BoundFunctionCall>
     </BoundConstructionStatement>
     <BoundConstructionStatement>
      <BoundFunctionCall>
       <BasicTypeCopyCtor info=""/>
       <BoundLocalVariable>
        <LocalVariableSymbol info="j">
         <type ref="type_1000001"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
       <BoundParameter>
        <ParameterSymbol info="right">
         <type ref="type_1000001"/>
        </ParameterSymbol>
       </BoundParameter>
      </BoundFunctionCall>
     </BoundConstructionStatement>
     <BoundConstructionStatement>
      <BoundFunctionCall>
       <BasicTypeMoveCtor info=""/>
       <BoundLocalVariable>
        <LocalVariableSymbol info="pivot">
         <type ref="type_1000004"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
       <BoundFunctionCall>
        <MemberFunctionSymbol info="operator[]">
         <returnType ref="type_1000005"/>
        </MemberFunctionSymbol>
        <BoundReferenceToPointerExpression>
         <type ref="type_1000006"/>
         <BoundParameter>
          <ParameterSymbol info="intList">
           <type ref="type_1000007"/>
          </ParameterSymbol>
         </BoundParameter>
        </BoundReferenceToPointerExpression>
        <BoundFunctionCall>
         <BasicTypeBinaryOperation classArity="1" info="operator/">
          <returnType ref="type_1000001"/>
         </BasicTypeBinaryOperation>
         <BoundFunctionCall>
          <BasicTypeBinaryOperation classArity="1" info="operator+">
           <returnType ref="type_1000001"/>
          </BasicTypeBinaryOperation>
          <BoundParameter>
           <ParameterSymbol info="left">
            <type ref="type_1000001"/>
           </ParameterSymbol>
          </BoundParameter>
          <BoundParameter>
           <ParameterSymbol info="right">
            <type ref="type_1000001"/>
           </ParameterSymbol>
          </BoundParameter>
         </BoundFunctionCall>
         <BoundConversion>
          <type ref="type_1000001"/>
          <BoundLiteral>
           <type ref="type_1000008"/>
           <SByteValue info="2"/>
          </BoundLiteral>
          <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
         </BoundConversion>
        </BoundFunctionCall>
       </BoundFunctionCall>
      </BoundFunctionCall>
     </BoundConstructionStatement>
     <BoundWhileStatement>
      <BoundFunctionCall>
       <BasicTypeUnaryOperation classArity="1" info="operator!">
        <returnType ref="type_1000000"/>
       </BasicTypeUnaryOperation>
       <BoundFunctionCall>
        <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
         <returnType ref="type_1000000"/>
        </BasicTypeComparisonOperation>
        <BoundLocalVariable>
         <LocalVariableSymbol info="j">
          <type ref="type_1000001"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
        <BoundLocalVariable>
         <LocalVariableSymbol info="i">
          <type ref="type_1000001"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
       </BoundFunctionCall>
      </BoundFunctionCall>
      <BoundCompoundStatement>
       <BoundWhileStatement>
        <BoundFunctionCall>
         <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
          <returnType ref="type_1000000"/>
         </BasicTypeComparisonOperation>
         <BoundDereferenceExpression>
          <type ref="type_1000004"/>
          <BoundFunctionCall>
           <MemberFunctionSymbol info="operator[]">
            <returnType ref="type_1000005"/>
           </MemberFunctionSymbol>
           <BoundReferenceToPointerExpression>
            <type ref="type_1000006"/>
            <BoundParameter>
             <ParameterSymbol info="intList">
              <type ref="type_1000007"/>
             </ParameterSymbol>
            </BoundParameter>
           </BoundReferenceToPointerExpression>
           <BoundLocalVariable>
            <LocalVariableSymbol info="i">
             <type ref="type_1000001"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundFunctionCall>
         </BoundDereferenceExpression>
         <BoundLocalVariable>
          <LocalVariableSymbol info="pivot">
           <type ref="type_1000004"/>
          </LocalVariableSymbol>
         </BoundLocalVariable>
        </BoundFunctionCall>
        <BoundSequenceStatement>
         <BoundAssignmentStatement>
          <BoundFunctionCall>
           <BasicTypeCopyAssignment info="">
            <returnType ref="type_1000002"/>
           </BasicTypeCopyAssignment>
           <BoundLocalVariable>
            <LocalVariableSymbol info="i">
             <type ref="type_1000001"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
           <BoundFunctionCall>
            <BasicTypeBinaryOperation classArity="1" info="operator+">
             <returnType ref="type_1000001"/>
            </BasicTypeBinaryOperation>
            <BoundLocalVariable>
             <LocalVariableSymbol info="i">
              <type ref="type_1000001"/>
             </LocalVariableSymbol>
            </BoundLocalVariable>
            <BoundConversion>
             <type ref="type_1000001"/>
             <BoundLiteral>
              <type ref="type_1000008"/>
              <SByteValue info="1"/>
             </BoundLiteral>
             <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
            </BoundConversion>
           </BoundFunctionCall>
          </BoundFunctionCall>
         </BoundAssignmentStatement>
         <BoundExpressionStatement>
          <BoundLocalVariable>
           <LocalVariableSymbol info="i">
            <type ref="type_1000001"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundExpressionStatement>
        </BoundSequenceStatement>
       </BoundWhileStatement>
       <BoundWhileStatement>
        <BoundFunctionCall>
         <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
          <returnType ref="type_1000000"/>
         </BasicTypeComparisonOperation>
         <BoundLocalVariable>
          <LocalVariableSymbol info="pivot">
           <type ref="type_1000004"/>
          </LocalVariableSymbol>
         </BoundLocalVariable>
         <BoundDereferenceExpression>
          <type ref="type_1000004"/>
          <BoundFunctionCall>
           <MemberFunctionSymbol info="operator[]">
            <returnType ref="type_1000005"/>
           </MemberFunctionSymbol>
           <BoundReferenceToPointerExpression>
            <type ref="type_1000006"/>
            <BoundParameter>
             <ParameterSymbol info="intList">
              <type ref="type_1000007"/>
             </ParameterSymbol>
            </BoundParameter>
           </BoundReferenceToPointerExpression>
           <BoundLocalVariable>
            <LocalVariableSymbol info="j">
             <type ref="type_1000001"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundFunctionCall>
         </BoundDereferenceExpression>
        </BoundFunctionCall>
        <BoundSequenceStatement>
         <BoundAssignmentStatement>
          <BoundFunctionCall>
           <BasicTypeCopyAssignment info="">
            <returnType ref="type_1000002"/>
           </BasicTypeCopyAssignment>
           <BoundLocalVariable>
            <LocalVariableSymbol info="j">
             <type ref="type_1000001"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
           <BoundFunctionCall>
            <BasicTypeBinaryOperation classArity="1" info="operator-">
             <returnType ref="type_1000001"/>
            </BasicTypeBinaryOperation>
            <BoundLocalVariable>
             <LocalVariableSymbol info="j">
              <type ref="type_1000001"/>
             </LocalVariableSymbol>
            </BoundLocalVariable>
            <BoundConversion>
             <type ref="type_1000001"/>
             <BoundLiteral>
              <type ref="type_1000008"/>
              <SByteValue info="1"/>
             </BoundLiteral>
             <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
            </BoundConversion>
           </BoundFunctionCall>
          </BoundFunctionCall>
         </BoundAssignmentStatement>
         <BoundExpressionStatement>
          <BoundLocalVariable>
           <LocalVariableSymbol info="j">
            <type ref="type_1000001"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundExpressionStatement>
        </BoundSequenceStatement>
       </BoundWhileStatement>
       <BoundIfStatement>
        <BoundFunctionCall>
         <BasicTypeUnaryOperation classArity="1" info="operator!">
          <returnType ref="type_1000000"/>
         </BasicTypeUnaryOperation>
         <BoundFunctionCall>
          <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
           <returnType ref="type_1000000"/>
          </BasicTypeComparisonOperation>
          <BoundLocalVariable>
           <LocalVariableSymbol info="j">
            <type ref="type_1000001"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
          <BoundLocalVariable>
           <LocalVariableSymbol info="i">
            <type ref="type_1000001"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundFunctionCall>
        </BoundFunctionCall>
        <BoundCompoundStatement>
         <BoundExpressionStatement>
          <BoundFunctionCall>
           <FunctionSymbol info="Swap">
            <returnType ref="type_1000002"/>
           </FunctionSymbol>
           <BoundFunctionCall>
            <MemberFunctionSymbol info="operator[]">
             <returnType ref="type_1000005"/>
            </MemberFunctionSymbol>
            <BoundReferenceToPointerExpression>
             <type ref="type_1000006"/>
             <BoundParameter>
              <ParameterSymbol info="intList">
               <type ref="type_1000007"/>
              </ParameterSymbol>
             </BoundParameter>
            </BoundReferenceToPointerExpression>
            <BoundLocalVariable>
             <LocalVariableSymbol info="i">
              <type ref="type_1000001"/>
             </LocalVariableSymbol>
            </BoundLocalVariable>
           </BoundFunctionCall>
           <BoundFunctionCall>
            <MemberFunctionSymbol info="operator[]">
             <returnType ref="type_1000005"/>
            </MemberFunctionSymbol>
            <BoundReferenceToPointerExpression>
             <type ref="type_1000006"/>
             <BoundParameter>
              <ParameterSymbol info="intList">
               <type ref="type_1000007"/>
              </ParameterSymbol>
             </BoundParameter>
            </BoundReferenceToPointerExpression>
            <BoundLocalVariable>
             <LocalVariableSymbol info="j">
              <type ref="type_1000001"/>
             </LocalVariableSymbol>
            </BoundLocalVariable>
           </BoundFunctionCall>
          </BoundFunctionCall>
         </BoundExpressionStatement>
         <BoundSequenceStatement>
          <BoundAssignmentStatement>
           <BoundFunctionCall>
            <BasicTypeCopyAssignment info="">
             <returnType ref="type_1000002"/>
            </BasicTypeCopyAssignment>
            <BoundLocalVariable>
             <LocalVariableSymbol info="i">
              <type ref="type_1000001"/>
             </LocalVariableSymbol>
            </BoundLocalVariable>
            <BoundFunctionCall>
             <BasicTypeBinaryOperation classArity="1" info="operator+">
              <returnType ref="type_1000001"/>
             </BasicTypeBinaryOperation>
             <BoundLocalVariable>
              <LocalVariableSymbol info="i">
               <type ref="type_1000001"/>
              </LocalVariableSymbol>
             </BoundLocalVariable>
             <BoundConversion>
              <type ref="type_1000001"/>
              <BoundLiteral>
               <type ref="type_1000008"/>
               <SByteValue info="1"/>
              </BoundLiteral>
              <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
             </BoundConversion>
            </BoundFunctionCall>
           </BoundFunctionCall>
          </BoundAssignmentStatement>
          <BoundExpressionStatement>
           <BoundLocalVariable>
            <LocalVariableSymbol info="i">
             <type ref="type_1000001"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundExpressionStatement>
         </BoundSequenceStatement>
         <BoundSequenceStatement>
          <BoundAssignmentStatement>
           <BoundFunctionCall>
            <BasicTypeCopyAssignment info="">
             <returnType ref="type_1000002"/>
            </BasicTypeCopyAssignment>
            <BoundLocalVariable>
             <LocalVariableSymbol info="j">
              <type ref="type_1000001"/>
             </LocalVariableSymbol>
            </BoundLocalVariable>
            <BoundFunctionCall>
             <BasicTypeBinaryOperation classArity="1" info="operator-">
              <returnType ref="type_1000001"/>
             </BasicTypeBinaryOperation>
             <BoundLocalVariable>
              <LocalVariableSymbol info="j">
               <type ref="type_1000001"/>
              </LocalVariableSymbol>
             </BoundLocalVariable>
             <BoundConversion>
              <type ref="type_1000001"/>
              <BoundLiteral>
               <type ref="type_1000008"/>
               <SByteValue info="1"/>
              </BoundLiteral>
              <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
             </BoundConversion>
            </BoundFunctionCall>
           </BoundFunctionCall>
          </BoundAssignmentStatement>
          <BoundExpressionStatement>
           <BoundLocalVariable>
            <LocalVariableSymbol info="j">
             <type ref="type_1000001"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundExpressionStatement>
         </BoundSequenceStatement>
        </BoundCompoundStatement>
       </BoundIfStatement>
      </BoundCompoundStatement>
     </BoundWhileStatement>
     <BoundReturnStatement>
      <BoundFunctionCall>
       <BasicTypeReturn info="">
        <returnType ref="type_1000001"/>
       </BasicTypeReturn>
       <BoundLocalVariable>
        <LocalVariableSymbol info="i">
         <type ref="type_1000001"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
      </BoundFunctionCall>
     </BoundReturnStatement>
    </BoundCompoundStatement>
   </BoundFunction>
   <BoundFunction info="QuickSort(List&lt;int>&amp; intList, long left, long right)">
    <BoundCompoundStatement>
     <BoundIfStatement>
      <BoundFunctionCall>
       <BasicTypeUnaryOperation classArity="1" info="operator!">
        <returnType ref="type_1000000"/>
       </BasicTypeUnaryOperation>
       <BoundFunctionCall>
        <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
         <returnType ref="type_1000000"/>
        </BasicTypeComparisonOperation>
        <BoundParameter>
         <ParameterSymbol info="right">
          <type ref="type_1000001"/>
         </ParameterSymbol>
        </BoundParameter>
        <BoundParameter>
         <ParameterSymbol info="left">
          <type ref="type_1000001"/>
         </ParameterSymbol>
        </BoundParameter>
       </BoundFunctionCall>
      </BoundFunctionCall>
      <BoundEmptyStatement/>
      <BoundExpressionStatement>
       <BoundFunctionCall>
        <FunctionSymbol info="RtFailAssertion">
         <returnType ref="type_1000002"/>
        </FunctionSymbol>
        <BoundLiteral>
         <type ref="type_1000003"/>
         <StringValue info=""/>
        </BoundLiteral>
        <BoundLiteral>
         <type ref="type_1000003"/>
         <StringValue info=""/>
        </BoundLiteral>
        <BoundLiteral>
         <type ref="type_1000003"/>
         <StringValue info=""/>
        </BoundLiteral>
        <BoundLiteral>
         <type ref="type_1000004"/>
         <IntValue info="26"/>
        </BoundLiteral>
       </BoundFunctionCall>
      </BoundExpressionStatement>
     </BoundIfStatement>
     <BoundConstructionStatement>
      <BoundFunctionCall>
       <BasicTypeCopyCtor info=""/>
       <BoundLocalVariable>
        <LocalVariableSymbol info="index">
         <type ref="type_1000001"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
       <BoundFunctionCall>
        <FunctionSymbol info="Partition">
         <returnType ref="type_1000001"/>
        </FunctionSymbol>
        <BoundParameter>
         <ParameterSymbol info="intList">
          <type ref="type_1000007"/>
         </ParameterSymbol>
        </BoundParameter>
        <BoundParameter>
         <ParameterSymbol info="left">
          <type ref="type_1000001"/>
         </ParameterSymbol>
        </BoundParameter>
        <BoundParameter>
         <ParameterSymbol info="right">
          <type ref="type_1000001"/>
         </ParameterSymbol>
        </BoundParameter>
       </BoundFunctionCall>
      </BoundFunctionCall>
     </BoundConstructionStatement>
     <BoundIfStatement>
      <BoundFunctionCall>
       <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
        <returnType ref="type_1000000"/>
       </BasicTypeComparisonOperation>
       <BoundParameter>
        <ParameterSymbol info="left">
         <type ref="type_1000001"/>
        </ParameterSymbol>
       </BoundParameter>
       <BoundFunctionCall>
        <BasicTypeBinaryOperation classArity="1" info="operator-">
         <returnType ref="type_1000001"/>
        </BasicTypeBinaryOperation>
        <BoundLocalVariable>
         <LocalVariableSymbol info="index">
          <type ref="type_1000001"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
        <BoundConversion>
         <type ref="type_1000001"/>
         <BoundLiteral>
          <type ref="type_1000008"/>
          <SByteValue info="1"/>
         </BoundLiteral>
         <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
        </BoundConversion>
       </BoundFunctionCall>
      </BoundFunctionCall>
      <BoundCompoundStatement>
       <BoundExpressionStatement>
        <BoundFunctionCall>
         <FunctionSymbol info="QuickSort">
          <returnType ref="type_1000002"/>
         </FunctionSymbol>
         <BoundParameter>
          <ParameterSymbol info="intList">
           <type ref="type_1000007"/>
          </ParameterSymbol>
         </BoundParameter>
         <BoundParameter>
          <ParameterSymbol info="left">
           <type ref="type_1000001"/>
          </ParameterSymbol>
         </BoundParameter>
         <BoundFunctionCall>
          <BasicTypeBinaryOperation classArity="1" info="operator-">
           <returnType ref="type_1000001"/>
          </BasicTypeBinaryOperation>
          <BoundLocalVariable>
           <LocalVariableSymbol info="index">
            <type ref="type_1000001"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
          <BoundConversion>
           <type ref="type_1000001"/>
           <BoundLiteral>
            <type ref="type_1000008"/>
            <SByteValue info="1"/>
           </BoundLiteral>
           <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
          </BoundConversion>
         </BoundFunctionCall>
        </BoundFunctionCall>
       </BoundExpressionStatement>
      </BoundCompoundStatement>
     </BoundIfStatement>
     <BoundIfStatement>
      <BoundFunctionCall>
       <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
        <returnType ref="type_1000000"/>
       </BasicTypeComparisonOperation>
       <BoundLocalVariable>
        <LocalVariableSymbol info="index">
         <type ref="type_1000001"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
       <BoundParameter>
        <ParameterSymbol info="right">
         <type ref="type_1000001"/>
        </ParameterSymbol>
       </BoundParameter>
      </BoundFunctionCall>
      <BoundCompoundStatement>
       <BoundExpressionStatement>
        <BoundFunctionCall>
         <FunctionSymbol info="QuickSort">
          <returnType ref="type_1000002"/>
         </FunctionSymbol>
         <BoundParameter>
          <ParameterSymbol info="intList">
           <type ref="type_1000007"/>
          </ParameterSymbol>
         </BoundParameter>
         <BoundLocalVariable>
          <LocalVariableSymbol info="index">
           <type ref="type_1000001"/>
          </LocalVariableSymbol>
         </BoundLocalVariable>
         <BoundParameter>
          <ParameterSymbol info="right">
           <type ref="type_1000001"/>
          </ParameterSymbol>
         </BoundParameter>
        </BoundFunctionCall>
       </BoundExpressionStatement>
      </BoundCompoundStatement>
     </BoundIfStatement>
    </BoundCompoundStatement>
   </BoundFunction>
   <BoundFunction info="QuickSort(List&lt;int>&amp; intList)">
    <BoundCompoundStatement>
     <BoundIfStatement>
      <BoundFunctionCall>
       <BasicTypeUnaryOperation classArity="1" info="operator!">
        <returnType ref="type_1000000"/>
       </BasicTypeUnaryOperation>
       <BoundFunctionCall>
        <MemberFunctionSymbol info="IsEmpty">
         <returnType ref="type_1000000"/>
        </MemberFunctionSymbol>
        <BoundReferenceToPointerExpression>
         <type ref="type_1000006"/>
         <BoundParameter>
          <ParameterSymbol info="intList">
           <type ref="type_1000007"/>
          </ParameterSymbol>
         </BoundParameter>
        </BoundReferenceToPointerExpression>
       </BoundFunctionCall>
      </BoundFunctionCall>
      <BoundCompoundStatement>
       <BoundExpressionStatement>
        <BoundFunctionCall>
         <FunctionSymbol info="QuickSort">
          <returnType ref="type_1000002"/>
         </FunctionSymbol>
         <BoundParameter>
          <ParameterSymbol info="intList">
           <type ref="type_1000007"/>
          </ParameterSymbol>
         </BoundParameter>
         <BoundConversion>
          <type ref="type_1000001"/>
          <BoundLiteral>
           <type ref="type_1000008"/>
           <SByteValue info="0"/>
          </BoundLiteral>
          <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
         </BoundConversion>
         <BoundFunctionCall>
          <BasicTypeBinaryOperation classArity="1" info="operator-">
           <returnType ref="type_1000001"/>
          </BasicTypeBinaryOperation>
          <BoundFunctionCall>
           <MemberFunctionSymbol info="Count">
            <returnType ref="type_1000001"/>
           </MemberFunctionSymbol>
           <BoundReferenceToPointerExpression>
            <type ref="type_1000006"/>
            <BoundParameter>
             <ParameterSymbol info="intList">
              <type ref="type_1000007"/>
             </ParameterSymbol>
            </BoundParameter>
           </BoundReferenceToPointerExpression>
          </BoundFunctionCall>
          <BoundConversion>
           <type ref="type_1000001"/>
           <BoundLiteral>
            <type ref="type_1000008"/>
            <SByteValue info="1"/>
           </BoundLiteral>
           <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=LongTypeSymbol"/>
          </BoundConversion>
         </BoundFunctionCall>
        </BoundFunctionCall>
       </BoundExpressionStatement>
      </BoundCompoundStatement>
     </BoundIfStatement>
    </BoundCompoundStatement>
   </BoundFunction>
   <BoundNamespace info="">
    <BoundNamespace info="System"/>
   </BoundNamespace>
   <BoundNamespace info="">
    <BoundNamespace info="System"/>
   </BoundNamespace>
   <BoundFunction info="Print(const List&lt;int>&amp; intList)">
    <BoundCompoundStatement>
     <BoundConstructionStatement>
      <BoundFunctionCall>
       <BasicTypeCopyCtor info=""/>
       <BoundLocalVariable>
        <LocalVariableSymbol info="first">
         <type ref="type_1000000"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
       <BoundLiteral>
        <type ref="type_1000000"/>
        <BoolValue info="true"/>
       </BoundLiteral>
      </BoundFunctionCall>
     </BoundConstructionStatement>
     <BoundExpressionStatement>
      <BoundFunctionCall>
       <MemberFunctionSymbol info="Write">
        <returnType ref="type_1000002"/>
       </MemberFunctionSymbol>
       <BoundAddressOfExpression>
        <type ref="type_1000009"/>
        <BoundConstructAndReturnTemporaryExpression>
         <type ref="type_1"/>
         <BoundFunctionCall>
          <ConstructorSymbol info=""/>
          <BoundAddressOfExpression>
           <type ref="type_1000014"/>
           <BoundLocalVariable>
            <LocalVariableSymbol info="@t0">
             <type ref="type_1"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundAddressOfExpression>
          <BoundLiteral>
           <type ref="type_1000010"/>
           <CharValue info="91"/>
          </BoundLiteral>
         </BoundFunctionCall>
         <BoundLocalVariable>
          <LocalVariableSymbol info="@t0">
           <type ref="type_1"/>
          </LocalVariableSymbol>
         </BoundLocalVariable>
        </BoundConstructAndReturnTemporaryExpression>
       </BoundAddressOfExpression>
      </BoundFunctionCall>
     </BoundExpressionStatement>
     <BoundCompoundStatement>
      <BoundConstructionStatement>
       <BoundFunctionCall>
        <ClassMoveConstructor info=""/>
        <BoundAddressOfExpression>
         <type ref="type_1000015"/>
         <BoundLocalVariable>
          <LocalVariableSymbol info="@end">
           <type ref="type_4"/>
          </LocalVariableSymbol>
         </BoundLocalVariable>
        </BoundAddressOfExpression>
        <BoundAddressOfExpression>
         <type ref="type_1000018"/>
         <BoundConstructAndReturnTemporaryExpression>
          <type ref="type_4"/>
          <BoundFunctionCall>
           <MemberFunctionSymbol info="CEnd">
            <returnType ref="type_4"/>
           </MemberFunctionSymbol>
           <BoundReferenceToPointerExpression>
            <type ref="type_1000019"/>
            <BoundParameter>
             <ParameterSymbol info="intList">
              <type ref="type_1000020"/>
             </ParameterSymbol>
            </BoundParameter>
           </BoundReferenceToPointerExpression>
           <BoundAddressOfExpression>
            <type ref="type_1000015"/>
            <BoundLocalVariable>
             <LocalVariableSymbol info="@t1">
              <type ref="type_4"/>
             </LocalVariableSymbol>
            </BoundLocalVariable>
           </BoundAddressOfExpression>
          </BoundFunctionCall>
          <BoundLocalVariable>
           <LocalVariableSymbol info="@t1">
            <type ref="type_4"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundConstructAndReturnTemporaryExpression>
        </BoundAddressOfExpression>
       </BoundFunctionCall>
      </BoundConstructionStatement>
      <BoundForStatement>
       <BoundConstructionStatement>
        <BoundFunctionCall>
         <ClassMoveConstructor info=""/>
         <BoundAddressOfExpression>
          <type ref="type_1000015"/>
          <BoundLocalVariable>
           <LocalVariableSymbol info="@it">
            <type ref="type_4"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundAddressOfExpression>
         <BoundAddressOfExpression>
          <type ref="type_1000018"/>
          <BoundConstructAndReturnTemporaryExpression>
           <type ref="type_4"/>
           <BoundFunctionCall>
            <MemberFunctionSymbol info="CBegin">
             <returnType ref="type_4"/>
            </MemberFunctionSymbol>
            <BoundReferenceToPointerExpression>
             <type ref="type_1000019"/>
             <BoundParameter>
              <ParameterSymbol info="intList">
               <type ref="type_1000020"/>
              </ParameterSymbol>
             </BoundParameter>
            </BoundReferenceToPointerExpression>
            <BoundAddressOfExpression>
             <type ref="type_1000015"/>
             <BoundLocalVariable>
              <LocalVariableSymbol info="@t2">
               <type ref="type_4"/>
              </LocalVariableSymbol>
             </BoundLocalVariable>
            </BoundAddressOfExpression>
           </BoundFunctionCall>
           <BoundLocalVariable>
            <LocalVariableSymbol info="@t2">
             <type ref="type_4"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundConstructAndReturnTemporaryExpression>
         </BoundAddressOfExpression>
        </BoundFunctionCall>
       </BoundConstructionStatement>
       <BoundFunctionCall>
        <BasicTypeUnaryOperation classArity="1" info="operator!">
         <returnType ref="type_1000000"/>
        </BasicTypeUnaryOperation>
        <BoundFunctionCall>
         <FunctionSymbol info="operator==">
          <returnType ref="type_1000000"/>
         </FunctionSymbol>
         <BoundAddressOfExpression>
          <type ref="type_1000021"/>
          <BoundLocalVariable>
           <LocalVariableSymbol info="@it">
            <type ref="type_4"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundAddressOfExpression>
         <BoundAddressOfExpression>
          <type ref="type_1000021"/>
          <BoundLocalVariable>
           <LocalVariableSymbol info="@end">
            <type ref="type_4"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundAddressOfExpression>
        </BoundFunctionCall>
       </BoundFunctionCall>
       <BoundExpressionStatement>
        <BoundFunctionCall>
         <MemberFunctionSymbol info="operator++">
          <returnType ref="type_1000021"/>
         </MemberFunctionSymbol>
         <BoundAddressOfExpression>
          <type ref="type_1000015"/>
          <BoundLocalVariable>
           <LocalVariableSymbol info="@it">
            <type ref="type_4"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundAddressOfExpression>
        </BoundFunctionCall>
       </BoundExpressionStatement>
       <BoundCompoundStatement>
        <BoundConstructionStatement>
         <BoundFunctionCall>
          <BasicTypeCopyCtor info=""/>
          <BoundLocalVariable>
           <LocalVariableSymbol info="x">
            <type ref="type_1000004"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
          <BoundDereferenceExpression>
           <type ref="type_1000022"/>
           <BoundFunctionCall>
            <MemberFunctionSymbol info="operator*">
             <returnType ref="type_1000016"/>
            </MemberFunctionSymbol>
            <BoundAddressOfExpression>
             <type ref="type_1000015"/>
             <BoundLocalVariable>
              <LocalVariableSymbol info="@it">
               <type ref="type_4"/>
              </LocalVariableSymbol>
             </BoundLocalVariable>
            </BoundAddressOfExpression>
           </BoundFunctionCall>
          </BoundDereferenceExpression>
         </BoundFunctionCall>
        </BoundConstructionStatement>
        <BoundCompoundStatement>
         <BoundIfStatement>
          <BoundLocalVariable>
           <LocalVariableSymbol info="first">
            <type ref="type_1000000"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
          <BoundCompoundStatement>
           <BoundAssignmentStatement>
            <BoundFunctionCall>
             <BasicTypeCopyAssignment info="">
              <returnType ref="type_1000002"/>
             </BasicTypeCopyAssignment>
             <BoundLocalVariable>
              <LocalVariableSymbol info="first">
               <type ref="type_1000000"/>
              </LocalVariableSymbol>
             </BoundLocalVariable>
             <BoundLiteral>
              <type ref="type_1000000"/>
              <BoolValue info="false"/>
             </BoundLiteral>
            </BoundFunctionCall>
           </BoundAssignmentStatement>
          </BoundCompoundStatement>
          <BoundCompoundStatement>
           <BoundExpressionStatement>
            <BoundFunctionCall>
             <MemberFunctionSymbol info="Write">
              <returnType ref="type_1000002"/>
             </MemberFunctionSymbol>
             <BoundLiteral>
              <type ref="type_1000003"/>
              <StringValue info=""/>
             </BoundLiteral>
            </BoundFunctionCall>
           </BoundExpressionStatement>
          </BoundCompoundStatement>
         </BoundIfStatement>
         <BoundExpressionStatement>
          <BoundFunctionCall>
           <MemberFunctionSymbol info="Write">
            <returnType ref="type_1000002"/>
           </MemberFunctionSymbol>
           <BoundLocalVariable>
            <LocalVariableSymbol info="x">
             <type ref="type_1000004"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundFunctionCall>
         </BoundExpressionStatement>
        </BoundCompoundStatement>
       </BoundCompoundStatement>
      </BoundForStatement>
     </BoundCompoundStatement>
     <BoundExpressionStatement>
      <BoundFunctionCall>
       <MemberFunctionSymbol info="WriteLine">
        <returnType ref="type_1000002"/>
       </MemberFunctionSymbol>
       <BoundAddressOfExpression>
        <type ref="type_1000009"/>
        <BoundConstructAndReturnTemporaryExpression>
         <type ref="type_1"/>
         <BoundFunctionCall>
          <ConstructorSymbol info=""/>
          <BoundAddressOfExpression>
           <type ref="type_1000014"/>
           <BoundLocalVariable>
            <LocalVariableSymbol info="@t3">
             <type ref="type_1"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundAddressOfExpression>
          <BoundLiteral>
           <type ref="type_1000010"/>
           <CharValue info="93"/>
          </BoundLiteral>
         </BoundFunctionCall>
         <BoundLocalVariable>
          <LocalVariableSymbol info="@t3">
           <type ref="type_1"/>
          </LocalVariableSymbol>
         </BoundLocalVariable>
        </BoundConstructAndReturnTemporaryExpression>
       </BoundAddressOfExpression>
      </BoundFunctionCall>
     </BoundExpressionStatement>
    </BoundCompoundStatement>
   </BoundFunction>
   <BoundNamespace info="">
    <BoundNamespace info="System">
     <BoundNamespace info="Collections"/>
    </BoundNamespace>
   </BoundNamespace>
   <BoundFunction info="main()">
    <BoundCompoundStatement>
     <BoundConstructionStatement>
      <BoundFunctionCall>
       <ConstructorSymbol info=""/>
       <BoundAddressOfExpression>
        <type ref="type_1000006"/>
        <BoundLocalVariable>
         <LocalVariableSymbol info="intList">
          <type ref="type_5"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
       </BoundAddressOfExpression>
      </BoundFunctionCall>
     </BoundConstructionStatement>
     <BoundConstructionStatement>
      <BoundFunctionCall>
       <BasicTypeCopyCtor info=""/>
       <BoundLocalVariable>
        <LocalVariableSymbol info="n">
         <type ref="type_1000004"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
       <BoundConversion>
        <type ref="type_1000004"/>
        <BoundLiteral>
         <type ref="type_1000008"/>
         <SByteValue info="10"/>
        </BoundLiteral>
        <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=IntTypeSymbol"/>
       </BoundConversion>
      </BoundFunctionCall>
     </BoundConstructionStatement>
     <BoundForStatement>
      <BoundConstructionStatement>
       <BoundFunctionCall>
        <BasicTypeCopyCtor info=""/>
        <BoundLocalVariable>
         <LocalVariableSymbol info="i">
          <type ref="type_1000004"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
        <BoundConversion>
         <type ref="type_1000004"/>
         <BoundLiteral>
          <type ref="type_1000008"/>
          <SByteValue info="0"/>
         </BoundLiteral>
         <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=IntTypeSymbol"/>
        </BoundConversion>
       </BoundFunctionCall>
      </BoundConstructionStatement>
      <BoundFunctionCall>
       <BasicTypeComparisonOperation classArity="1" info="operator&lt;">
        <returnType ref="type_1000000"/>
       </BasicTypeComparisonOperation>
       <BoundLocalVariable>
        <LocalVariableSymbol info="i">
         <type ref="type_1000004"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
       <BoundLocalVariable>
        <LocalVariableSymbol info="n">
         <type ref="type_1000004"/>
        </LocalVariableSymbol>
       </BoundLocalVariable>
      </BoundFunctionCall>
      <BoundSequenceStatement>
       <BoundAssignmentStatement>
        <BoundFunctionCall>
         <BasicTypeCopyAssignment info="">
          <returnType ref="type_1000002"/>
         </BasicTypeCopyAssignment>
         <BoundLocalVariable>
          <LocalVariableSymbol info="i">
           <type ref="type_1000004"/>
          </LocalVariableSymbol>
         </BoundLocalVariable>
         <BoundFunctionCall>
          <BasicTypeBinaryOperation classArity="1" info="operator+">
           <returnType ref="type_1000004"/>
          </BasicTypeBinaryOperation>
          <BoundLocalVariable>
           <LocalVariableSymbol info="i">
            <type ref="type_1000004"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
          <BoundConversion>
           <type ref="type_1000004"/>
           <BoundLiteral>
            <type ref="type_1000008"/>
            <SByteValue info="1"/>
           </BoundLiteral>
           <BasicTypeConversion classArity="1" info="sourceType=SByteTypeSymbol,targetType=IntTypeSymbol"/>
          </BoundConversion>
         </BoundFunctionCall>
        </BoundFunctionCall>
       </BoundAssignmentStatement>
       <BoundExpressionStatement>
        <BoundLocalVariable>
         <LocalVariableSymbol info="i">
          <type ref="type_1000004"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
       </BoundExpressionStatement>
      </BoundSequenceStatement>
      <BoundCompoundStatement>
       <BoundExpressionStatement>
        <BoundFunctionCall>
         <MemberFunctionSymbol info="Add">
          <returnType ref="type_1000002"/>
         </MemberFunctionSymbol>
         <BoundAddressOfExpression>
          <type ref="type_1000006"/>
          <BoundLocalVariable>
           <LocalVariableSymbol info="intList">
            <type ref="type_5"/>
           </LocalVariableSymbol>
          </BoundLocalVariable>
         </BoundAddressOfExpression>
         <BoundAddressOfExpression>
          <type ref="type_1000005"/>
          <BoundTemporary>
           <type ref="type_1000004"/>
           <BoundFunctionCall>
            <BasicTypeReturn info="">
             <returnType ref="type_1000004"/>
            </BasicTypeReturn>
            <BoundConversion>
             <type ref="type_1000004"/>
             <BoundFunctionCall>
              <FunctionSymbol info="RandomNumber">
               <returnType ref="type_1000024"/>
              </FunctionSymbol>
              <BoundConversion>
               <type ref="type_1000024"/>
               <BoundLiteral>
                <type ref="type_1000025"/>
                <ByteValue info="100"/>
               </BoundLiteral>
               <BasicTypeConversion classArity="1" info="sourceType=ByteTypeSymbol,targetType=UIntTypeSymbol"/>
              </BoundConversion>
             </BoundFunctionCall>
             <BasicTypeConversion classArity="1" info="sourceType=UIntTypeSymbol,targetType=IntTypeSymbol"/>
            </BoundConversion>
           </BoundFunctionCall>
           <BoundLocalVariable>
            <LocalVariableSymbol info="@t0">
             <type ref="type_1000004"/>
            </LocalVariableSymbol>
           </BoundLocalVariable>
          </BoundTemporary>
         </BoundAddressOfExpression>
        </BoundFunctionCall>
       </BoundExpressionStatement>
      </BoundCompoundStatement>
     </BoundForStatement>
     <BoundExpressionStatement>
      <BoundFunctionCall>
       <FunctionSymbol info="Print">
        <returnType ref="type_1000002"/>
       </FunctionSymbol>
       <BoundAddressOfExpression>
        <type ref="type_1000007"/>
        <BoundLocalVariable>
         <LocalVariableSymbol info="intList">
          <type ref="type_5"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
       </BoundAddressOfExpression>
      </BoundFunctionCall>
     </BoundExpressionStatement>
     <BoundExpressionStatement>
      <BoundFunctionCall>
       <FunctionSymbol info="QuickSort">
        <returnType ref="type_1000002"/>
       </FunctionSymbol>
       <BoundAddressOfExpression>
        <type ref="type_1000007"/>
        <BoundLocalVariable>
         <LocalVariableSymbol info="intList">
          <type ref="type_5"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
       </BoundAddressOfExpression>
      </BoundFunctionCall>
     </BoundExpressionStatement>
     <BoundExpressionStatement>
      <BoundFunctionCall>
       <FunctionSymbol info="Print">
        <returnType ref="type_1000002"/>
       </FunctionSymbol>
       <BoundAddressOfExpression>
        <type ref="type_1000007"/>
        <BoundLocalVariable>
         <LocalVariableSymbol info="intList">
          <type ref="type_5"/>
         </LocalVariableSymbol>
        </BoundLocalVariable>
       </BoundAddressOfExpression>
      </BoundFunctionCall>
     </BoundExpressionStatement>
    </BoundCompoundStatement>
   </BoundFunction>
  </BoundNamespace>
 </BoundCompileUnit>
 <types>
  <type id="type_1">
   <ClassTemplateSpecializationSymbol info="String">
    <BoundTemplateParameterSymbol info="CharT">
     <type ref="type_1000010"/>
    </BoundTemplateParameterSymbol>
    <TypedefSymbol info="ConstIterator">
     <type ref="type_2"/>
    </TypedefSymbol>
    <TypedefSymbol info="Iterator">
     <type ref="type_3"/>
    </TypedefSymbol>
    <MemberVariableSymbol info="len">
     <type ref="type_1000001"/>
    </MemberVariableSymbol>
    <MemberVariableSymbol info="res">
     <type ref="type_1000001"/>
    </MemberVariableSymbol>
    <MemberVariableSymbol info="chars">
     <type ref="type_1000013"/>
    </MemberVariableSymbol>
   </ClassTemplateSpecializationSymbol>
  </type>
  <type id="type_2">
   <ClassTemplateSpecializationSymbol info="RandomAccessIter">
    <BoundTemplateParameterSymbol info="T">
     <type ref="type_1000010"/>
    </BoundTemplateParameterSymbol>
    <BoundTemplateParameterSymbol info="R">
     <type ref="type_1000011"/>
    </BoundTemplateParameterSymbol>
    <BoundTemplateParameterSymbol info="P">
     <type ref="type_1000003"/>
    </BoundTemplateParameterSymbol>
    <TypedefSymbol info="ValueType">
     <type ref="type_1000010"/>
    </TypedefSymbol>
    <TypedefSymbol info="ReferenceType">
     <type ref="type_1000011"/>
    </TypedefSymbol>
    <TypedefSymbol info="PointerType">
     <type ref="type_1000003"/>
    </TypedefSymbol>
    <TypedefSymbol info="Self">
     <type ref="type_2"/>
    </TypedefSymbol>
    <MemberVariableSymbol info="ptr">
     <type ref="type_1000003"/>
    </MemberVariableSymbol>
   </ClassTemplateSpecializationSymbol>
  </type>
  <type id="type_3">
   <ClassTemplateSpecializationSymbol info="RandomAccessIter">
    <BoundTemplateParameterSymbol info="T">
     <type ref="type_1000010"/>
    </BoundTemplateParameterSymbol>
    <BoundTemplateParameterSymbol info="R">
     <type ref="type_1000012"/>
    </BoundTemplateParameterSymbol>
    <BoundTemplateParameterSymbol info="P">
     <type ref="type_1000013"/>
    </BoundTemplateParameterSymbol>
    <TypedefSymbol info="ValueType">
     <type ref="type_1000010"/>
    </TypedefSymbol>
    <TypedefSymbol info="ReferenceType">
     <type ref="type_1000012"/>
    </TypedefSymbol>
    <TypedefSymbol info="PointerType">
     <type ref="type_1000013"/>
    </TypedefSymbol>
    <TypedefSymbol info="Self">
     <type ref="type_3"/>
    </TypedefSymbol>
    <MemberVariableSymbol info="ptr">
     <type ref="type_1000013"/>
    </MemberVariableSymbol>
   </ClassTemplateSpecializationSymbol>
  </type>
  <type id="type_4">
   <ClassTemplateSpecializationSymbol info="RandomAccessIter">
    <BoundTemplateParameterSymbol info="T">
     <type ref="type_1000004"/>
    </BoundTemplateParameterSymbol>
    <BoundTemplateParameterSymbol info="R">
     <type ref="type_1000016"/>
    </BoundTemplateParameterSymbol>
    <BoundTemplateParameterSymbol info="P">
     <type ref="type_1000017"/>
    </BoundTemplateParameterSymbol>
    <TypedefSymbol info="ValueType">
     <type ref="type_1000004"/>
    </TypedefSymbol>
    <TypedefSymbol info="ReferenceType">
     <type ref="type_1000016"/>
    </TypedefSymbol>
    <TypedefSymbol info="PointerType">
     <type ref="type_1000017"/>
    </TypedefSymbol>
    <TypedefSymbol info="Self">
     <type ref="type_4"/>
    </TypedefSymbol>
    <FunctionGroupSymbol info="@constructor">
     <FunctionSymbol>
      <ParameterSymbol info="this">
       <type ref="type_1000015"/>
      </ParameterSymbol>
      <ParameterSymbol info="that">
       <type ref="type_1000018"/>
      </ParameterSymbol>
     </FunctionSymbol>
    </FunctionGroupSymbol>
    <MemberVariableSymbol info="ptr">
     <type ref="type_1000017"/>
    </MemberVariableSymbol>
   </ClassTemplateSpecializationSymbol>
  </type>
  <type id="type_5">
   <ClassTemplateSpecializationSymbol info="List">
    <BoundTemplateParameterSymbol info="T">
     <type ref="type_1000004"/>
    </BoundTemplateParameterSymbol>
    <TypedefSymbol info="ValueType">
     <type ref="type_1000004"/>
    </TypedefSymbol>
    <TypedefSymbol info="Self">
     <type ref="type_5"/>
    </TypedefSymbol>
    <TypedefSymbol info="ConstIterator">
     <type ref="type_4"/>
    </TypedefSymbol>
    <TypedefSymbol info="Iterator">
     <type ref="type_6"/>
    </TypedefSymbol>
    <MemberVariableSymbol info="items">
     <type ref="type_1000023"/>
    </MemberVariableSymbol>
    <MemberVariableSymbol info="count">
     <type ref="type_1000001"/>
    </MemberVariableSymbol>
    <MemberVariableSymbol info="res">
     <type ref="type_1000001"/>
    </MemberVariableSymbol>
   </ClassTemplateSpecializationSymbol>
  </type>
  <type id="type_6">
   <ClassTemplateSpecializationSymbol info="RandomAccessIter">
    <BoundTemplateParameterSymbol info="T">
     <type ref="type_1000004"/>
    </BoundTemplateParameterSymbol>
    <BoundTemplateParameterSymbol info="R">
     <type ref="type_1000005"/>
    </BoundTemplateParameterSymbol>
    <BoundTemplateParameterSymbol info="P">
     <type ref="type_1000023"/>
    </BoundTemplateParameterSymbol>
    <TypedefSymbol info="ValueType">
     <type ref="type_1000004"/>
    </TypedefSymbol>
    <TypedefSymbol info="ReferenceType">
     <type ref="type_1000005"/>
    </TypedefSymbol>
    <TypedefSymbol info="PointerType">
     <type ref="type_1000023"/>
    </TypedefSymbol>
    <TypedefSymbol info="Self">
     <type ref="type_6"/>
    </TypedefSymbol>
    <MemberVariableSymbol info="ptr">
     <type ref="type_1000023"/>
    </MemberVariableSymbol>
   </ClassTemplateSpecializationSymbol>
  </type>
  <type id="type_1000000">
   <BoolTypeSymbol/>
  </type>
  <type id="type_1000001">
   <LongTypeSymbol/>
  </type>
  <type id="type_1000002">
   <VoidTypeSymbol/>
  </type>
  <type id="type_1000003">
   <DerivedTypeSymbol info="const char*"/>
  </type>
  <type id="type_1000004">
   <IntTypeSymbol/>
  </type>
  <type id="type_1000005">
   <DerivedTypeSymbol info="int&amp;"/>
  </type>
  <type id="type_1000006">
   <DerivedTypeSymbol info="List&lt;int>*"/>
  </type>
  <type id="type_1000007">
   <DerivedTypeSymbol info="List&lt;int>&amp;"/>
  </type>
  <type id="type_1000008">
   <SByteTypeSymbol/>
  </type>
  <type id="type_1000009">
   <DerivedTypeSymbol info="String&lt;char>&amp;"/>
  </type>
  <type id="type_1000010">
   <CharTypeSymbol/>
  </type>
  <type id="type_1000011">
   <DerivedTypeSymbol info="const char&amp;"/>
  </type>
  <type id="type_1000012">
   <DerivedTypeSymbol info="char&amp;"/>
  </type>
  <type id="type_1000013">
   <DerivedTypeSymbol info="char*"/>
  </type>
  <type id="type_1000014">
   <DerivedTypeSymbol info="String&lt;char>*"/>
  </type>
  <type id="type_1000015">
   <DerivedTypeSymbol info="RandomAccessIter&lt;int, const int&amp;, const int*>*"/>
  </type>
  <type id="type_1000016">
   <DerivedTypeSymbol info="const int&amp;"/>
  </type>
  <type id="type_1000017">
   <DerivedTypeSymbol info="const int*"/>
  </type>
  <type id="type_1000018">
   <DerivedTypeSymbol info="RandomAccessIter&lt;int, const int&amp;, const int*>&amp;&amp;"/>
  </type>
  <type id="type_1000019">
   <DerivedTypeSymbol info="const List&lt;int>*"/>
  </type>
  <type id="type_1000020">
   <DerivedTypeSymbol info="const List&lt;int>&amp;"/>
  </type>
  <type id="type_1000021">
   <DerivedTypeSymbol info="RandomAccessIter&lt;int, const int&amp;, const int*>&amp;"/>
  </type>
  <type id="type_1000022">
   <DerivedTypeSymbol info="const int"/>
  </type>
  <type id="type_1000023">
   <DerivedTypeSymbol info="int*"/>
  </type>
  <type id="type_1000024">
   <UIntTypeSymbol/>
  </type>
  <type id="type_1000025">
   <ByteTypeSymbol/>
  </type>
 </types>
</boundTree>
