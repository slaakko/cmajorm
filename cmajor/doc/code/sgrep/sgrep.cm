using System;
using System.IO;
using System.Collections;
using System.RegularExpressions;

void PrintHelp()
{
    Console.Out() << "Usage: sgrep \"PATTERN\" FILES..." << endl();
}

int main(int argc, const char** argv)
{
    try
    {
        ustring pattern;
        List<string> fileNames;
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else
                {
                    throw Exception("unknown option '" + arg + "'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                for (char o : arg)
                {
                    if (o == 'h')
                    {
                        PrintHelp();
                        return 1;
                    }
                    else
                    {
                        throw Exception("unknown option '-" + string(o) + "'");
                    }
                }
            }
            else
            {
                if (pattern.IsEmpty())
                {
                    pattern = u".*" + ToUtf32(arg) + u".*";
                }
                else
                {
                    fileNames.Add(arg);
                }
            }
        }
        Context context;
        Nfa nfa = CompileRegularExpressionPattern(context, pattern);
        for (const string& fileName : fileNames)
        {
            Console.Out() << fileName << ":" << endl();
            List<string> lines = File.ReadAllLines(fileName);
            long n = lines.Count();
            for (long i = 0; i < n; ++i)
            {
                ustring line = ToUtf32(lines[i]);
                if (PatternMatch(line, nfa))
                {
                    Console.Out() << ToString(i + 1) << ": " << line << endl();
                }
            }
        }
    }
    catch (const Exception& ex)
    {
        Console.Error() << ex.Message() << endl();
        return 1;
    }
    return 0;
}
