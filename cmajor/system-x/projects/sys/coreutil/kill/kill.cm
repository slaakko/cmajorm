// =================================
// Copyright (c) 2022 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Collections;
using System.Os;

void PrintHelp()
{
    Console.Out() << "kill [options] <pid>" << endl() << endl();
    Console.Out() << "Kills a process." << endl() << endl();
    Console.Out() << "Options:" << endl() << endl();
    Console.Out() << "--help | -h" << endl();
    Console.Out() << "  Print help and exit." << endl() << endl();
    Console.Out() << "--verbose | -v" << endl();
    Console.Out() << "  Be verbose." << endl() << endl();
}

int main(int argc, const char** argv)
{
    try
    {
        bool verbose = false;
        int pid = -1;
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else if (arg == "--verbose")
                {
                    verbose = true;
                }
                else
                {
                    throw Exception("unknown option '" + arg + "'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                string options = arg.Substring(1);
                if (options.IsEmpty())
                {
                    throw Exception("unknown option '" + arg + "'");
                }
                else
                {
                    bool unknown = false;
                    string uo;
                    for (char o : options)
                    {
                        switch (o)
                        {
                            case 'h':
                            {
                                PrintHelp();
                                return 1;
                            }
                            case 'v':
                            {
                                verbose = true;
                                break;
                            }
                            default:
                            {
                                unknown = true; 
                                uo.Append(o);
                                break;
                            }
                        }
                        if (unknown)
                        {
                            throw Exception("unknown option '-" + uo + "'");
                        }
                    }
                }
            }
            else
            {
                pid = ParseInt(arg);
            }
        }
        if (pid != -1)
        {
            Kill(pid);
            if (verbose)
            {
                Console.Out() << "process " << pid << " killed" << endl();
            }
        }
    }
    catch (const Exception& ex)
    {
        Console.Error() << ex.ToString() << endl();
        return 1;
    }
    return 0;
}
