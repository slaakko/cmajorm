// =================================
// Copyright (c) 2022 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Collections;

class NameCharSet
{
	static NameCharSet() : instance(new NameCharSet())
	{
	}
	public static NameCharSet& Instance()
	{
		return *instance;
	}
	public nothrow bool IsNameChar(uchar ch)
	{
		return nameCharSet.CFind(ch) != nameCharSet.CEnd();
	}
	public nothrow bool IsStartNameChar(uchar ch)
	{
		return startNameCharSet.CFind(ch) != startNameCharSet.CEnd();
	}
	private nothrow NameCharSet()
	{
		for (int i = 0x30; i < 0x3A; ++i)
		{
			nameCharSet.Insert(cast<uchar>(i));
		}
		for (int i = 0x41; i < 0x5B; ++i)
		{
			nameCharSet.Insert(cast<uchar>(i));
			startNameCharSet.Insert(cast<uchar>(i));
		}
		nameCharSet.Insert(cast<uchar>(0x5F));
		startNameCharSet.Insert(cast<uchar>(0x5F));
	}
	private static UniquePtr<NameCharSet> instance;
	private Set<uchar> nameCharSet;
	private Set<uchar> startNameCharSet;
}

public nothrow bool IsNameChar(uchar ch)
{
	return NameCharSet.Instance().IsNameChar(ch);
}

public nothrow bool IsStartNameChar(uchar ch)
{
	return NameCharSet.Instance().IsStartNameChar(ch);
}
