// =================================
// Copyright (c) 2022 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;
using System.Collections;

void PrintHelp()
{
    // todo
}

int main(int argc, const char** argv)
{
    try
    {
        bool verbose = false;
        List<ustring> words;
        for (int i = 1; i < argc; ++i)
        {
            string arg = argv[i];
            if (arg.StartsWith("--"))
            {
                if (arg == "--help")
                {
                    PrintHelp();
                    return 1;
                }
                else if (arg == "--verbose")
                {
                    verbose = true;
                }
                else
                {
                    throw Exception("unknown option '" + arg + "'");
                }
            }
            else if (arg.StartsWith("-"))
            {
                string options = arg.Substring(1);
                for (char o : options)
                {
                    bool unknown = false;
                    string uo;
                    switch (o)
                    {
                        case 'h':
                        {
                            PrintHelp();
                            return 1;
                        }
                        case 'v':
                        {
                            verbose = true;
                            break;
                        }
                        default:
                        {
                            unknown = true;
                            uo = string(o);
                            break;
                        }
                    }
                    if (unknown)
                    {
                        throw Exception("unknown option '-" + uo + "'");
                    }
                }
            }
            else
            {
                words.Add(ToUtf32(arg));
            }
        }
        UniquePtr<Command> command = ParseCommand(words);
        if (!command.IsNull())
        {
            command->Execute();
        }
    }
    catch (const Exception& ex)
    {
        Console.Error() << ex.ToString() << endl();
        return 1;
    }
    return 0;
}
