// =================================
// Copyright (c) 2022 Seppo Laakko
// Distributed under the MIT license
// =================================

using System;

namespace System.Screen
{
    public class ContainerControl : Control
    {
        public nothrow ContainerControl(ControlCreateParams& createParams) : base(createParams), controls(this)
        {
        }
        public void AddChild(Control* child)
        {
            controls.AddChild(child);
        }
        public void InsertChildBefore(Component* child, Component* before)
        {
            controls.InsertBefore(child, before);
        }
        public void InsertChildAfter(Component* child, Component* after)
        {
            controls.InsertAfter(child, after);
        }
        public override bool HandleWriteScreen(WriteScreenMessage* message)
        {
            bool messageRectIsDefault = message->GetRect().IsDefault();
            WriteScreenEventArgs args(message->GetRect());
            OnWriteScreen(args);
            Component* child = controls.FirstChild();
            while (child != null)
            {
                if (child is Control*)
                {
                    Control* controlChild = cast<Control*>(child);
                    if (messageRectIsDefault)
                    {
                        controlChild->OnWriteScreen(args);
                    }
                    else if (controlChild->GetRect().IntersectsWith(message->GetRect()))
                    {
                        controlChild->OnWriteScreen(args);
                    }
                }
                child = child->NextSibling();
            }
            return true;
        }
        public nothrow Container& Controls() 
        {
            return controls;
        }
        private Container controls;
    }
}
