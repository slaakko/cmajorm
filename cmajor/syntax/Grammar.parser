// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

[hpp]#include <cmajor/parsing/Grammar.hpp>
[cpp]#include <cmajor/syntax/Element.hpp>
[cpp]#include <cmajor/syntax/Rule.hpp>

namespace cmajor.syntax
{
    grammar GrammarGrammar
    {
        using Element.Identifier;
        using Element.QualifiedId;
        using Element.Signature;
        using Element.RuleLink;
        using Rule.Rule;
        using stdlib.char;

        Grammar(cmajor::parsing::Scope* enclosingScope): cmajor::parsing::Grammar*
                    ::= keyword("grammar") Identifier:name!{ value = new Grammar(name, enclosingScope); value->SetSpan(span); value->SetNs(enclosingScope->Ns()); } 
                        '{'! GrammarContent(value) '}'!
                    ;
                    
        GrammarContent(cmajor::parsing::Grammar* grammar)
                    ::= 
                    (   StartClause(grammar)
                    |   SkipClause(grammar)
                    |   RuleLink(grammar)
                    |   Rule(grammar->GetScope()){ grammar->AddRule(Rule); }
                    )*
                    ;

        StartClause(cmajor::parsing::Grammar* grammar)
                    ::= keyword("start") Identifier:strt! ';'{ grammar->SetStartRuleName(strt); }
                    ;

        SkipClause(cmajor::parsing::Grammar* grammar) 
                    ::= keyword("skip") QualifiedId:skp! ';'{ grammar->SetSkipRuleName(skp); }
                    ;
    }
}
