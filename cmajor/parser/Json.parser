// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

[hpp]#include <cmajor/util/Json.hpp>
[hpp]#include <sstream>

namespace cmajor.parser
{
    [hpp]using namespace cmajor::util;

    grammar Json
    {
        using stdlib.spaces;
        using stdlib.escape;
        using stdlib.num;
        skip spaces;

        Value : JsonValue*
            ::= String{ value = String; }
            |   Number{ value = Number; }
            |   Object{ value = Object; }
            |   Array{ value = Array; }
            |   keyword("true"){ value = new JsonBool(true); }
            |   keyword("false"){ value = new JsonBool(false); }
            |   keyword("null"){ value = new JsonNull(); }
            ;

        String : JsonString*
            ::= token('"'{ value = new JsonString(); }
                (   [^"\\]{ value->Append(*matchBegin); }
                |   ("\\u" (hexdigit hexdigit hexdigit hexdigit)
                    {
                        uint32_t hexValue;
                        std::stringstream s;
                        s.str(ToUtf8(std::u32string(matchBegin, matchEnd)));
                        s >> std::hex >> hexValue;
                        value->Append(char32_t(hexValue));
                    }
                    )
                |   escape{ value->Append(escape); }
                )*
                '"')
            ;

        Number : JsonNumber*
            ::= num:n{ value = new JsonNumber(n); }
            ;

        Object(var std::unique_ptr<JsonString> js, var std::unique_ptr<JsonValue> jv) : JsonObject*
            ::= '{'{ value = new JsonObject(); }
                ((String:s{ js.reset(s); } ':' Value:v{ jv.reset(v); }){ value->AddField(js->Value(), std::move(jv)); } % ',')?
                '}'
            ;

        Array(var std::unique_ptr<JsonValue> item) : JsonArray*
            ::= '['{ value = new JsonArray(); }
                (Value:i{ item.reset(i); value->AddItem(std::move(item)); } % ',')?
                ']'
            ;
    }
}

