// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

[hpp]#include <cmajor/ast/Specifier.hpp>

namespace cmajor.parser
{
    [hpp]using namespace cmajor::ast;

    grammar Specifier
    {
        Specifiers : Specifiers
            ::= (Specifier{ value = value | Specifier; })*
            ;

        Specifier : Specifiers
            ::= keyword("public"){ value = Specifiers::public_; }
            |   keyword("protected"){ value = Specifiers::protected_; }
            |   keyword("private"){ value = Specifiers::private_; }
            |   keyword("internal"){ value = Specifiers::internal_; }
            |   keyword("static"){ value = Specifiers::static_; }
            |   keyword("virtual"){ value = Specifiers::virtual_; }
            |   keyword("override"){ value = Specifiers::override_; }
            |   keyword("abstract"){ value = Specifiers::abstract_; }
            |   keyword("inline"){ value = Specifiers::inline_; }
            |   keyword("explicit"){ value = Specifiers::explicit_; }
            |   keyword("extern"){ value = Specifiers::external_; }
            |   keyword("suppress"){ value = Specifiers::suppress_; }
            |   keyword("default"){ value = Specifiers::default_; }
            |   keyword("constexpr"){ value = Specifiers::constexpr_; }
            |   keyword("cdecl"){ value = Specifiers::cdecl_; }
            |   keyword("nothrow"){ value = Specifiers::nothrow_; }
            |   keyword("throw"){ value = Specifiers::throw_; }
            |   keyword("new"){ value = Specifiers::new_; }
            |   keyword("unit_test"){ value = Specifiers::unit_test_; }
            ;
    }
}
